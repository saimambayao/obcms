# ==========================================
# OBCMS Production Environment Configuration
# Sevalla Deployment Template
# ==========================================
# 
# IMPORTANT: 
# 1. Copy this file to .env.production
# 2. Fill in all required values before deployment
# 3. NEVER commit actual secrets to version control
# 4. Test with .env.staging before production

# ==========================================
# CORE DJANGO SETTINGS
# ==========================================

# Django Configuration
DJANGO_SETTINGS_MODULE=obc_management.settings.production
SECRET_KEY=GENERATE_NEW_SECURE_DJANGO_SECRET_KEY_FOR_PRODUCTION
DEBUG=False

# Sevalla Deployment - Host Configuration (CRITICAL)
# MUST include the actual Sevalla application domain for production
ALLOWED_HOSTS=obcms-app.sevalla.app,*.sevalla.app,bmms.barmm.gov.ph

# Sevalla Deployment - CSRF Protection (CRITICAL)
# MUST include the HTTPS URL of your Sevalla application
CSRF_TRUSTED_ORIGINS=https://obcms-app.sevalla.app

# Sevalla Deployment - Port Configuration (CRITICAL)
# Sevalla containers must bind to PORT=8080 (platform requirement)
PORT=8080

# Application Information
SITE_NAME=BMMS - Bangsamoro Ministerial Management System
SITE_URL=https://bmms.barmm.gov.ph
ADMIN_EMAIL=admin@bmms.barmm.gov.ph

# Timezone Configuration
TIME_ZONE=Asia/Manila
LANGUAGE_CODE=en-us
USE_I18N=True
USE_L10N=True
USE_TZ=True

# ==========================================
# DATABASE CONFIGURATION (Sevalla PostgreSQL)
# ==========================================

# Fill these with Sevalla database credentials
DB_NAME=obcms_prod
DB_USER=obcms_user
DB_PASSWORD=your-secure-postgresql-password-from-sevalla
DB_HOST=postgresql-xxx.sevalla.com
DB_PORT=5432

# Full connection URL (Django preferred format)
DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# Database Optimization
CONN_MAX_AGE=600
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30

# ==========================================
# REDIS CONFIGURATION (Sevalla Redis)
# ==========================================

# Fill these with Sevalla Redis credentials
REDIS_HOST=redis-xxx.sevalla.com
REDIS_PORT=6379
REDIS_PASSWORD=your-secure-redis-password-from-sevalla
REDIS_DB=0
REDIS_CONNECTION_POOL_MAX_CONNECTIONS=50

# Full connection URL
REDIS_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# Celery Configuration
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}
CELERY_ACCEPT_CONTENT=json
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_TIMEZONE=Asia/Manila
CELERY_BEAT_SCHEDULE_ENABLED=True

# ==========================================
# STORAGE CONFIGURATION (Sevalla Object Storage)
# ==========================================

# Enable/Disable S3 Storage (Set to False for testing)
USE_S3=True

# Sevalla Object Storage Credentials
AWS_ACCESS_KEY_ID=your-r2-access-key-from-sevalla
AWS_SECRET_ACCESS_KEY=your-r2-secret-key-from-sevalla
AWS_STORAGE_BUCKET_NAME=obcms-static-files
AWS_S3_ENDPOINT_URL=https://your-bucket.r2.sevalla.com
AWS_S3_CUSTOM_DOMAIN=
AWS_S3_REGION_NAME=auto
AWS_S3_FILE_OVERWRITE=False
AWS_DEFAULT_ACL=private

# Django Storage Settings
STATIC_URL=/static/
STATIC_ROOT=/app/src/staticfiles
MEDIA_URL=/media/
MEDIA_ROOT=/app/src/media

# Storage Backends
STATICFILES_STORAGE=storages.backends.s3boto3.S3Boto3Storage
DEFAULT_FILE_STORAGE=storages.backends.s3boto3.S3Boto3Storage

# ==========================================
# SECURITY SETTINGS (Production Hardening)
# ==========================================

# HTTPS and SSL Security
SECURE_SSL_REDIRECT=True
SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True
SECURE_BROWSER_XSS_FILTER=True
SECURE_CONTENT_TYPE_NOSNIFF=True
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True
X_FRAME_OPTIONS=DENY

# Session Configuration
SESSION_COOKIE_AGE=86400
SESSION_SAVE_EVERY_REQUEST=True
SESSION_COOKIE_HTTPONLY=True
CSRF_COOKIE_HTTPONLY=True
SESSION_ENGINE=django.contrib.sessions.backends.cache
SESSION_CACHE_ALIAS=default

# Headers Security
SECURE_REFERRER_POLICY=same-origin
SECURE_CROSS_ORIGIN_OPENER_POLICY=same-origin

# ==========================================
# EMAIL CONFIGURATION
# ==========================================

# Gmail/Google Workspace Configuration (Recommended)
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=noreply@bmms.barmm.gov.ph
EMAIL_HOST_PASSWORD=your-gmail-app-specific-password
DEFAULT_FROM_EMAIL=BMMS <noreply@bmms.barmm.gov.ph>
SERVER_EMAIL=admin@bmms.barmm.gov.ph

# Email Settings
EMAIL_SUBJECT_PREFIX="[BMMS]"
EMAIL_TIMEOUT=30
EMAIL_USE_SSL=False

# Alternative: SendGrid (for higher volumes)
# EMAIL_HOST=smtp.sendgrid.net
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=apikey
# EMAIL_HOST_PASSWORD=SENDGRID_API_KEY

# ==========================================
# AI SERVICES CONFIGURATION
# ==========================================

# Google Gemini API Configuration
GEMINI_API_KEY=your-gemini-api-key-from-google-cloud
GOOGLE_CLOUD_PROJECT_ID=your-google-cloud-project-id
GOOGLE_APPLICATION_CREDENTIALS_JSON={"type":"service_account",...}

# AI Model Configuration
GEMINI_MODEL=gemini-1.5-pro
GEMINI_TEMPERATURE=0.7
GEMINI_MAX_TOKENS=2048

# Vector Store and Search Configuration
VECTOR_STORE_TYPE=faiss
VECTOR_STORE_DIMENSION=768
EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
SIMILARITY_THRESHOLD=0.7
MAX_SEARCH_RESULTS=10
SEARCH_TIMEOUT=30
ENABLE_SEMANTIC_SEARCH=True
ENABLE_FULLTEXT_SEARCH=True

# ==========================================
# CACHE CONFIGURATION
# ==========================================

# Redis Cache Configuration
CACHE_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/1
CACHE_TTL=3600
CACHE_KEY_PREFIX=obcms
CACHE_VERSION=1

# Django Cache Backend
CACHES={
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "${CACHE_URL}",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# ==========================================
# PERFORMANCE CONFIGURATION
# ==========================================

# Connection Settings
CONN_MAX_AGE=600
DATA_UPLOAD_MAX_MEMORY_SIZE=5242880  # 5MB
FILE_UPLOAD_MAX_MEMORY_SIZE=5242880  # 5MB

# Django Performance
USE_TZ=True
LANGUAGE_CODE=en-us
USE_I18N=True
USE_L10N=True

# ==========================================
# LOGGING CONFIGURATION
# ==========================================

# Logging Settings
LOG_LEVEL=INFO
LOG_DIR=/app/logs
LOG_FILE=django.log
LOG_MAX_SIZE=50MB
LOG_BACKUP_COUNT=5

# Django Logging
DJANGO_LOG_LEVEL=INFO
REQUEST_LOGGING=True
SECURE_LOGGING=True

# ==========================================
# MONITORING AND HEALTH CHECKS
# ==========================================

# Health Check Configuration
HEALTH_CHECK_ENABLED=True
HEALTH_CHECK_TOKEN=your-secure-health-check-token
HEALTH_CHECK_INTERVAL=60

# Monitoring Settings
MONITORING_ENABLED=True
SENTRY_DSN=your-sentry-dsn-optional
ERROR_TRACKING_ENABLED=True

# ==========================================
# RATE LIMITING
# ==========================================

# Rate Limiting Configuration
RATELIMIT_ENABLE=True
RATELIMIT_USE_CACHE=default
RATELIMIT_KEY_PREFIX=rl:obcms

# Rate Limits (requests per minute)
RATELIMIT_VIEWS_LOGIN=5/m
RATELIMIT_VIEWS_REGISTER=3/m
RATELIMIT_VIEWS_API=100/m
RATELIMIT_GLOBAL=1000/m

# ==========================================
# BMMS-SPECIFIC CONFIGURATION
# ==========================================

# Organization Configuration
BMMS_ORGANIZATION_NAME=Office of the Chief Minister
BMMS_ORGANIZATION_TYPE=central
BMMS_ORGANIZATION_CODE=OCM
BMMS_ORGANIZATION_LEVEL=national

# Multi-tenant Settings
ENABLE_MULTI_TENANT=True
TENANT_MODEL=common.models.Organization
TENANT_QUERY_FIELD=organization

# Geographic Configuration
DEFAULT_REGION=BARMM
DEFAULT_TIMEZONE=Asia/Manila
GEOCODING_SERVICE=google
GEOCODING_API_KEY=your-geocoding-api-key

# Philippines Administrative Division
COUNTRY_CODE=PH
COUNTRY_NAME=Philippines
ADMIN_LEVEL_1=Region
ADMIN_LEVEL_2=Province
ADMIN_LEVEL_3=Municipality
ADMIN_LEVEL_4=Barangay

# ==========================================
# FEATURE FLAGS
# ==========================================

# Enable/Disable Features
ENABLE_AI_FEATURES=True
ENABLE_QUERY_EXPANSION=True
ENABLE_SEMANTIC_SEARCH=True
ENABLE_ANALYTICS=True
ENABLE_REPORTING=True
ENABLE_MOBILE_ACCESS=True

# Budgeting Module Configuration
ENABLE_BUDGET_MODULE=True
BUDGET_CURRENCY=PHP
BUDGET_FISCAL_YEAR_START=01
BUDGET_FISCAL_YEAR_END=12

# ==========================================
# DEPLOYMENT CONTROL
# ==========================================

# Migration Control
RUN_MIGRATIONS=true

# Build and Deployment
ENVIRONMENT=production
BUILD_NUMBER=1

# ==========================================
# SOCIAL AUTHENTICATION (Optional)
# ==========================================

# Google OAuth2 (Optional)
GOOGLE_OAUTH2_CLIENT_ID=your-google-oauth2-client-id
GOOGLE_OAUTH2_CLIENT_SECRET=your-google-oauth2-client-secret

# ==========================================
# BACKUP CONFIGURATION
# ==========================================

# Backup Settings
BACKUP_ENABLED=True
BACKUP_SCHEDULE=daily
BACKUP_RETENTION_DAYS=30
BACKUP_ENCRYPTION=True

# ==========================================
# TESTING AND STAGING OVERRIDES
# ==========================================

# For staging environment, override these settings:
# DEBUG=True
# USE_S3=False
# EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
# GEMINI_API_KEY=test-key
# GOOGLE_CLOUD_PROJECT_ID=obcms-test

# ==========================================
# SEVALLA DEPLOYMENT REQUIREMENTS
# ==========================================

# CRITICAL: The following variables MUST be configured correctly for Sevalla deployment:
#
# 1. ALLOWED_HOSTS=obcms-app.sevalla.app,*.sevallaapp
#    - Replace 'obcms-app' with your actual Sevalla application name
#    - Include both specific domain and wildcard for subdomains
#    - Failure causes Django DisallowedHost errors (HTTP 400/503)
#
# 2. CSRF_TRUSTED_ORIGINS=https://obcms-app.sevalla.app
#    - Must be the HTTPS URL of your Sevalla application
#    - Required for CSRF protection to work with AJAX requests
#    - Failure causes CSRF token validation errors
#
# 3. PORT=8080
#    - Sevalla platform requirement - containers must bind to port 8080
#    - Gunicorn will read this from environment variable
#    - Failure causes container to not receive traffic
#
# See: ../../issues/Sevalla_research.md for complete analysis

# ==========================================
# GUNICORN CONFIGURATION (Sevalla Optimized)
# ==========================================

# Gunicorn Worker Configuration for Sevalla Container Environment
GUNICORN_WORKERS=2
GUNICORN_WORKER_CLASS=gthread
GUNICORN_THREADS=2
GUNICORN_LOG_LEVEL=info

# Performance Settings for Container Environment
# Timeout reduced to 60s as recommended for Sevalla platform
GUNICORN_TIMEOUT=60
GUNICORN_GRACEFUL_TIMEOUT=30
GUNICORN_MAX_REQUESTS=1000
GUNICORN_MAX_REQUESTS_JITTER=100
GUNICORN_KEEPALIVE=2

# Worker Connection Settings
GUNICORN_WORKER_CONNECTIONS=1000
GUNICORN_PRELOAD_APP=true

# Container-Specific Settings
GUNICORN_PROC_NAME=obcms
GUNICORN_ACCESS_LOG="-"
GUNICORN_ERROR_LOG="-"

# ==========================================
# SECURITY NOTES
# ==========================================

# 1. Generate new Django SECRET_KEY:
#    python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
#
# 2. Use app-specific passwords for Gmail:
#    - Enable 2-factor authentication on Gmail account
#    - Generate app password at: https://myaccount.google.com/apppasswords
#
# 3. For Google Gemini API:
#    - Get API key from: https://makersuite.google.com/app/apikey
#    - Set up Google Cloud project and enable AI Platform API
#
# 4. For Object Storage (R2):
#    - Credentials provided by Sevalla dashboard
#    - Ensure bucket has proper permissions
#
# 5. Sevalla Platform Security:
#    - All three CRITICAL variables above must be set
#    - Test deployment in staging first
#    - Monitor Sevalla health checks after deployment
#
# 6. Regular Security Maintenance:
#    - Rotate secrets every 90 days
#    - Monitor access logs
#    - Update dependencies regularly
