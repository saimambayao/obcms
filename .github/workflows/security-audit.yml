name: Security Audit

on:
  # Run on push to main branch
  push:
    branches: [ main, master ]
  # Run on pull requests
  pull_request:
    branches: [ main, master ]
  # Run weekly on Mondays at 9:00 AM UTC
  schedule:
    - cron: '0 9 * * 1'
  # Allow manual trigger
  workflow_dispatch:

jobs:
  dependency-audit:
    name: Python Dependency Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit

      - name: Run pip-audit
        run: |
          pip-audit --desc --format json --output security-report.json || true
          pip-audit --desc

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-report
          path: security-report.json
          retention-days: 90

      - name: Check for critical vulnerabilities
        run: |
          # Fail the build if critical vulnerabilities are found
          # (commented out for initial setup - uncomment when ready)
          # pip-audit --strict

  code-security-scan:
    name: Code Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Bandit security linter
        uses: mdegis/bandit-action@v1.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          path: "src/"
          level: medium
          confidence: medium
          exit_zero: true

  docker-security-scan:
    name: Docker Image Security
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build --target production -t obcms:test .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'obcms:test'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'  # Don't fail build initially

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-audit, code-security-scan, docker-security-scan]
    if: always()

    steps:
      - name: Security scan completed
        run: |
          echo "âœ… Security audit workflow completed"
          echo "ðŸ“Š Check the workflow artifacts for detailed reports"
          echo "ðŸ”’ Review Security tab for vulnerability details"
