# Task ID: 8
# Title: Needs Assessment Categories and Prioritization
# Status: done
# Dependencies: 7
# Priority: high
# Description: Implement the needs assessment categorization system covering Education, Economic Development, Social Development, Cultural Development, and Infrastructure with priority ranking capabilities.
# Details:
1. Create needs category models with subcategories
2. Implement priority ranking system (Low, Medium, High, Critical)
3. Build needs-assessment relationships
4. Create needs tracking and status updates
5. Implement needs aggregation and reporting
6. Build admin interfaces for needs management
7. Create API endpoints for needs data

Model example:
```python
from django.db import models

class NeedCategory(models.Model):
    CATEGORY_CHOICES = [
        ('education', 'Education'),
        ('economic', 'Economic Development'),
        ('social', 'Social Development'),
        ('cultural', 'Cultural Development'),
        ('infrastructure', 'Infrastructure')
    ]
    
    name = models.CharField(max_length=50, choices=CATEGORY_CHOICES)
    description = models.TextField()
    
class NeedSubcategory(models.Model):
    category = models.ForeignKey(NeedCategory, on_delete=models.CASCADE, related_name='subcategories')
    name = models.CharField(max_length=100)
    description = models.TextField()

class AssessedNeed(models.Model):
    PRIORITY_CHOICES = [
        ('low', 'Low'),
        ('medium', 'Medium'),
        ('high', 'High'),
        ('critical', 'Critical')
    ]
    
    STATUS_CHOICES = [
        ('identified', 'Identified'),
        ('validated', 'Validated'),
        ('addressed', 'Being Addressed'),
        ('resolved', 'Resolved'),
        ('ongoing', 'Ongoing Need')
    ]
    
    assessment = models.ForeignKey('MANAAssessment', on_delete=models.CASCADE, related_name='identified_needs')
    category = models.ForeignKey(NeedCategory, on_delete=models.CASCADE)
    subcategory = models.ForeignKey(NeedSubcategory, on_delete=models.SET_NULL, null=True, blank=True)
    description = models.TextField()
    priority = models.CharField(max_length=10, choices=PRIORITY_CHOICES, default='medium')
    status = models.CharField(max_length=20, choices=STATUS_CHOICES, default='identified')
    affected_population = models.PositiveIntegerField(null=True, blank=True)
    notes = models.TextField(blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
```

# Test Strategy:
1. Unit tests for needs category and subcategory creation
2. Test priority ranking system functionality
3. Verify needs-assessment relationships
4. Test needs tracking and status updates
5. Validate needs aggregation and reporting
6. Test API endpoints for needs data
