# Generated by Django 4.2.21 on 2025-05-22 14:00

import uuid

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DataImport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "import_type",
                    models.CharField(
                        choices=[
                            ("communities", "OBC Communities"),
                            ("stakeholders", "Community Stakeholders"),
                            ("assessments", "Assessments"),
                            ("needs", "Community Needs"),
                            ("organizations", "Organizations"),
                            ("administrative", "Administrative Hierarchy"),
                            ("baseline_data", "Baseline Study Data"),
                            ("other", "Other"),
                        ],
                        help_text="Type of data being imported",
                        max_length=20,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Descriptive title for this import", max_length=255
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed description of the import"
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="CSV or Excel file to import",
                        upload_to="imports/%Y/%m/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["csv", "xlsx", "xls"]
                            )
                        ],
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                (
                    "mapping",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Field mapping configuration from file columns to model fields",
                    ),
                ),
                (
                    "import_options",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional import options and settings",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("partial", "Partially Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        help_text="Current status of the import",
                        max_length=20,
                    ),
                ),
                (
                    "records_total",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Total number of records in the file",
                        null=True,
                    ),
                ),
                (
                    "records_processed",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of records processed"
                    ),
                ),
                (
                    "records_imported",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of records successfully imported"
                    ),
                ),
                (
                    "records_updated",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of existing records updated"
                    ),
                ),
                (
                    "records_failed",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of records that failed to import"
                    ),
                ),
                (
                    "records_skipped",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of records skipped"
                    ),
                ),
                (
                    "error_log",
                    models.TextField(blank=True, help_text="Detailed error log"),
                ),
                (
                    "processing_log",
                    models.TextField(
                        blank=True, help_text="Processing log with detailed information"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, help_text="When processing started", null=True
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, help_text="When processing completed", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "imported_by",
                    models.ForeignKey(
                        help_text="User who initiated this import",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="data_imports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Import",
                "verbose_name_plural": "Data Imports",
                "db_table": "data_imports_import",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ImportTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="Template name", max_length=255)),
                (
                    "import_type",
                    models.CharField(
                        choices=[
                            ("communities", "OBC Communities"),
                            ("stakeholders", "Community Stakeholders"),
                            ("assessments", "Assessments"),
                            ("needs", "Community Needs"),
                            ("organizations", "Organizations"),
                            ("administrative", "Administrative Hierarchy"),
                            ("baseline_data", "Baseline Study Data"),
                            ("other", "Other"),
                        ],
                        help_text="Type of data this template is for",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Template description and instructions"
                    ),
                ),
                (
                    "template_file",
                    models.FileField(
                        help_text="Template file with sample data and headers",
                        upload_to="templates/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["csv", "xlsx"]
                            )
                        ],
                    ),
                ),
                (
                    "required_fields",
                    models.JSONField(
                        default=list, help_text="List of required field names"
                    ),
                ),
                (
                    "optional_fields",
                    models.JSONField(
                        default=list, help_text="List of optional field names"
                    ),
                ),
                (
                    "field_descriptions",
                    models.JSONField(
                        default=dict, help_text="Descriptions for each field"
                    ),
                ),
                (
                    "validation_rules",
                    models.JSONField(
                        default=dict, help_text="Validation rules for fields"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this template is active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this template",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Import Template",
                "verbose_name_plural": "Import Templates",
                "db_table": "data_imports_template",
                "ordering": ["import_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="ImportLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("debug", "Debug"),
                        ],
                        default="info",
                        help_text="Log level",
                        max_length=10,
                    ),
                ),
                ("message", models.TextField(help_text="Log message")),
                (
                    "row_number",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Row number in source file (if applicable)",
                        null=True,
                    ),
                ),
                (
                    "record_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Raw record data that caused the log entry",
                    ),
                ),
                (
                    "exception_type",
                    models.CharField(
                        blank=True,
                        help_text="Exception type (for error logs)",
                        max_length=255,
                    ),
                ),
                (
                    "exception_details",
                    models.TextField(
                        blank=True, help_text="Detailed exception information"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "import_session",
                    models.ForeignKey(
                        help_text="Associated import session",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="data_imports.dataimport",
                    ),
                ),
            ],
            options={
                "verbose_name": "Import Log",
                "verbose_name_plural": "Import Logs",
                "db_table": "data_imports_log",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="FieldMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name for this field mapping",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "import_type",
                    models.CharField(
                        choices=[
                            ("communities", "OBC Communities"),
                            ("stakeholders", "Community Stakeholders"),
                            ("assessments", "Assessments"),
                            ("needs", "Community Needs"),
                            ("organizations", "Organizations"),
                            ("administrative", "Administrative Hierarchy"),
                            ("baseline_data", "Baseline Study Data"),
                            ("other", "Other"),
                        ],
                        help_text="Type of data this mapping is for",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of this mapping"
                    ),
                ),
                ("mapping", models.JSONField(help_text="Field mapping configuration")),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the default mapping for this import type",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this mapping",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Field Mapping",
                "verbose_name_plural": "Field Mappings",
                "db_table": "data_imports_field_mapping",
                "ordering": ["import_type", "name"],
            },
        ),
    ]
