# Generated by Django 4.2.21 on 2025-05-29 18:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("mana", "0005_assessment_assessment_level_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="WorkshopActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "workshop_type",
                    models.CharField(
                        choices=[
                            (
                                "workshop_1",
                                "Workshop 1: Understanding the Community Context",
                            ),
                            (
                                "workshop_2",
                                "Workshop 2: Community Aspirations and Priorities",
                            ),
                            (
                                "workshop_3",
                                "Workshop 3: Community Collaboration and Empowerment",
                            ),
                            (
                                "workshop_4",
                                "Workshop 4: Community Feedback on Existing Initiatives",
                            ),
                            (
                                "workshop_5",
                                "Workshop 5: OBCs Needs, Challenges, Factors, and Outcomes",
                            ),
                            (
                                "workshop_6",
                                "Workshop 6: Ways Forward and Action Planning",
                            ),
                        ],
                        help_text="Type of workshop activity",
                        max_length=15,
                    ),
                ),
                ("title", models.CharField(help_text="Workshop title", max_length=250)),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of workshop objectives"
                    ),
                ),
                (
                    "workshop_day",
                    models.CharField(
                        choices=[
                            ("day_1", "Day 1: Arrival and Registration"),
                            (
                                "day_2",
                                "Day 2: Opening and Understanding Community Context",
                            ),
                            (
                                "day_3",
                                "Day 3: Aspirations, Priorities, Collaboration & Empowerment",
                            ),
                            (
                                "day_4",
                                "Day 4: Feedback, Challenges, Ways Forward & Closing",
                            ),
                            ("day_5", "Day 5: Departure"),
                        ],
                        help_text="Day of the 5-day MANA schedule",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planned", "Planned"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="planned",
                        help_text="Current status of the workshop",
                        max_length=15,
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateField(help_text="Scheduled date for the workshop"),
                ),
                (
                    "start_time",
                    models.TimeField(help_text="Start time of the workshop"),
                ),
                ("end_time", models.TimeField(help_text="End time of the workshop")),
                ("duration_hours", models.FloatField(help_text="Duration in hours")),
                (
                    "target_participants",
                    models.IntegerField(help_text="Target number of participants"),
                ),
                (
                    "actual_participants",
                    models.IntegerField(
                        default=0, help_text="Actual number of participants"
                    ),
                ),
                (
                    "methodology",
                    models.TextField(help_text="Workshop methodology and approach"),
                ),
                (
                    "materials_needed",
                    models.TextField(
                        blank=True, help_text="Materials and supplies needed"
                    ),
                ),
                (
                    "expected_outputs",
                    models.TextField(
                        help_text="Expected workshop outputs and deliverables"
                    ),
                ),
                (
                    "key_findings",
                    models.TextField(
                        blank=True, help_text="Key findings from the workshop"
                    ),
                ),
                (
                    "recommendations",
                    models.TextField(
                        blank=True, help_text="Recommendations emerging from workshop"
                    ),
                ),
                (
                    "challenges_encountered",
                    models.TextField(
                        blank=True, help_text="Challenges encountered during workshop"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["workshop_day", "start_time"],
            },
        ),
        migrations.AlterField(
            model_name="assessment",
            name="primary_methodology",
            field=models.CharField(
                choices=[
                    ("desk_review", "Desk Review/Research"),
                    ("survey", "Survey"),
                    ("kii", "Key Informant Interview (KII)"),
                    ("workshop", "FGD/Workshops"),
                    ("participatory", "Participatory Assessment"),
                    ("observation", "Direct Observation"),
                    ("mixed", "Mixed Methods"),
                    ("other", "Other Methodologies"),
                ],
                default="survey",
                help_text="Primary methodology used in the assessment",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="assessmentteammember",
            name="role",
            field=models.CharField(
                choices=[
                    ("team_leader", "Team Leader/Executive Director"),
                    ("deputy_leader", "Deputy Team Leader/DMO IV"),
                    ("facilitator", "Facilitator (DMO/CDO)"),
                    ("documenter", "Documenter"),
                    ("info_analyst", "Information System Analyst"),
                    ("secretariat", "Secretariat/Admin Support"),
                    ("data_collector", "Data Collector"),
                    ("technical_expert", "Technical Expert"),
                    ("observer", "Observer"),
                ],
                help_text="Role of the team member in this assessment",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="WorkshopSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_title",
                    models.CharField(help_text="Title of the session", max_length=200),
                ),
                (
                    "session_type",
                    models.CharField(
                        choices=[
                            ("opening", "Opening Session"),
                            ("presentation", "Presentation"),
                            ("group_work", "Group Work"),
                            ("plenary", "Plenary Discussion"),
                            ("breakout", "Breakout Session"),
                            ("synthesis", "Synthesis Session"),
                            ("closing", "Closing Session"),
                        ],
                        help_text="Type of session",
                        max_length=15,
                    ),
                ),
                (
                    "session_order",
                    models.IntegerField(help_text="Order of session within workshop"),
                ),
                ("start_time", models.TimeField(help_text="Session start time")),
                ("end_time", models.TimeField(help_text="Session end time")),
                ("objectives", models.TextField(help_text="Session objectives")),
                (
                    "methodology",
                    models.TextField(help_text="Session methodology and activities"),
                ),
                (
                    "outputs",
                    models.TextField(
                        blank=True, help_text="Session outputs and results"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Session notes and observations"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "facilitator",
                    models.ForeignKey(
                        help_text="Primary facilitator for this session",
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workshop",
                    models.ForeignKey(
                        help_text="Workshop this session belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="mana.workshopactivity",
                    ),
                ),
            ],
            options={
                "ordering": ["workshop", "session_order"],
                "unique_together": {("workshop", "session_order")},
            },
        ),
        migrations.CreateModel(
            name="WorkshopOutput",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "output_type",
                    models.CharField(
                        choices=[
                            ("community_map", "Community Map"),
                            ("timeline", "Historical Timeline"),
                            ("asset_inventory", "Asset Inventory"),
                            ("stakeholder_map", "Stakeholder Map"),
                            ("vision_statement", "Vision Statement"),
                            ("needs_assessment", "Needs Assessment"),
                            ("priority_list", "Priority List"),
                            ("organization_map", "Organization Map"),
                            ("collaboration_strategy", "Collaboration Strategy"),
                            ("program_feedback", "Program Feedback"),
                            ("problem_tree", "Problem Tree"),
                            ("solution_inventory", "Solution Inventory"),
                            ("action_plan", "Action Plan"),
                            ("meta_cards", "Meta Cards"),
                            ("flip_charts", "Flip Charts"),
                            ("photos", "Photo Documentation"),
                            ("audio_recording", "Audio Recording"),
                            ("other", "Other Output"),
                        ],
                        help_text="Type of workshop output",
                        max_length=25,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title or name of the output", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Description of the output"),
                ),
                (
                    "content",
                    models.TextField(help_text="Content or details of the output"),
                ),
                (
                    "file_path",
                    models.CharField(
                        blank=True,
                        help_text="Path to associated file (if any)",
                        max_length=500,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who documented this output",
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by_session",
                    models.ForeignKey(
                        blank=True,
                        help_text="Session that created this output",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="mana.workshopsession",
                    ),
                ),
                (
                    "workshop",
                    models.ForeignKey(
                        help_text="Workshop that produced this output",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outputs",
                        to="mana.workshopactivity",
                    ),
                ),
            ],
            options={
                "ordering": ["workshop", "output_type"],
            },
        ),
        migrations.AddField(
            model_name="workshopactivity",
            name="assessment",
            field=models.ForeignKey(
                help_text="Assessment this workshop belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workshop_activities",
                to="mana.assessment",
            ),
        ),
        migrations.AddField(
            model_name="workshopactivity",
            name="created_by",
            field=models.ForeignKey(
                help_text="User who created this workshop",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="created_workshops",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="workshopactivity",
            name="facilitators",
            field=models.ManyToManyField(
                help_text="Workshop facilitators",
                related_name="facilitated_workshops",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="MANAReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(help_text="Report title", max_length=300)),
                (
                    "report_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("review", "Under Review"),
                            ("validation", "Validation"),
                            ("final", "Final Report"),
                            ("submitted", "Submitted"),
                        ],
                        default="draft",
                        help_text="Current status of the report",
                        max_length=15,
                    ),
                ),
                (
                    "executive_summary",
                    models.TextField(
                        blank=True,
                        help_text="Executive summary including key findings and recommendations",
                    ),
                ),
                (
                    "context_background",
                    models.TextField(
                        blank=True,
                        help_text="Legal/policy frameworks and community profile",
                    ),
                ),
                (
                    "methodology",
                    models.TextField(
                        blank=True,
                        help_text="Data collection methods and analytical framework",
                    ),
                ),
                (
                    "social_development_findings",
                    models.TextField(
                        blank=True,
                        help_text="Education, health, social protection findings",
                    ),
                ),
                (
                    "economic_development_findings",
                    models.TextField(
                        blank=True,
                        help_text="Livelihoods, infrastructure, financial inclusion findings",
                    ),
                ),
                (
                    "cultural_development_findings",
                    models.TextField(
                        blank=True,
                        help_text="Cultural practices, religious institutions, arts findings",
                    ),
                ),
                (
                    "rights_protection_findings",
                    models.TextField(
                        blank=True,
                        help_text="Governance, access to justice, land rights findings",
                    ),
                ),
                (
                    "priority_issues",
                    models.TextField(
                        blank=True, help_text="Prioritized needs and justification"
                    ),
                ),
                (
                    "policy_recommendations",
                    models.TextField(
                        blank=True, help_text="Policy recommendations for each priority"
                    ),
                ),
                (
                    "program_development_opportunities",
                    models.TextField(
                        blank=True, help_text="Program development opportunities"
                    ),
                ),
                (
                    "strategic_approaches",
                    models.TextField(
                        blank=True, help_text="Strategic approaches and timeframes"
                    ),
                ),
                (
                    "stakeholder_roles",
                    models.TextField(
                        blank=True, help_text="Stakeholder roles and responsibilities"
                    ),
                ),
                (
                    "resource_requirements",
                    models.TextField(
                        blank=True, help_text="Resource requirements and sources"
                    ),
                ),
                (
                    "monitoring_evaluation",
                    models.TextField(
                        blank=True, help_text="Monitoring and evaluation mechanisms"
                    ),
                ),
                (
                    "validation_date",
                    models.DateField(
                        blank=True, help_text="Date of validation workshop", null=True
                    ),
                ),
                (
                    "validation_participants",
                    models.TextField(
                        blank=True, help_text="Validation workshop participants"
                    ),
                ),
                (
                    "validation_feedback",
                    models.TextField(
                        blank=True, help_text="Feedback from validation workshop"
                    ),
                ),
                (
                    "submission_date",
                    models.DateField(
                        blank=True,
                        help_text="Date submitted to Office of Chief Minister",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assessment",
                    models.OneToOneField(
                        help_text="Assessment this report belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mana_report",
                        to="mana.assessment",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this report",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submitted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who submitted the report",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="submitted_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "MANA Report",
                "verbose_name_plural": "MANA Reports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WorkshopParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Participant name", max_length=100),
                ),
                (
                    "participant_type",
                    models.CharField(
                        choices=[
                            ("elder", "Community Elder"),
                            ("women_leader", "Women Leader"),
                            ("youth_leader", "Youth Leader"),
                            ("farmer", "Farmer"),
                            ("fisherfolk", "Fisherfolk"),
                            ("religious_leader", "Religious Leader"),
                            ("traditional_leader", "Traditional Leader"),
                            ("milf_representative", "MILF Representative"),
                            ("mnlf_representative", "MNLF Representative"),
                            ("business_leader", "Business Leader"),
                            ("teacher", "Teacher/Educator"),
                            ("health_worker", "Health Worker"),
                            ("other", "Other"),
                        ],
                        help_text="Type/role of participant",
                        max_length=20,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")],
                        help_text="Gender of participant",
                        max_length=10,
                    ),
                ),
                (
                    "age_group",
                    models.CharField(
                        choices=[
                            ("18-30", "18-30 years"),
                            ("31-45", "31-45 years"),
                            ("46-60", "46-60 years"),
                            ("60+", "60+ years"),
                        ],
                        help_text="Age group of participant",
                        max_length=15,
                    ),
                ),
                (
                    "contact_info",
                    models.CharField(
                        blank=True, help_text="Contact information", max_length=100
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        blank=True,
                        help_text="Organization or group represented",
                        max_length=150,
                    ),
                ),
                (
                    "attendance_status",
                    models.CharField(
                        choices=[
                            ("attended", "Attended"),
                            ("partial", "Partial Attendance"),
                            ("absent", "Absent"),
                        ],
                        default="attended",
                        help_text="Attendance status",
                        max_length=15,
                    ),
                ),
                (
                    "participation_notes",
                    models.TextField(
                        blank=True, help_text="Notes on participant contributions"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "workshop",
                    models.ForeignKey(
                        help_text="Workshop this participant attended",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="mana.workshopactivity",
                    ),
                ),
            ],
            options={
                "ordering": ["participant_type", "name"],
                "unique_together": {("workshop", "name", "participant_type")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="workshopactivity",
            unique_together={("assessment", "workshop_type")},
        ),
    ]
