# Generated by Django 5.2.7 on 2025-10-12 17:47

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="StrategicPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Strategic plan title (e.g., 'OOBC Strategic Plan 2024-2028')",
                        max_length=255,
                    ),
                ),
                (
                    "start_year",
                    models.IntegerField(
                        help_text="Starting year of strategic plan",
                        validators=[django.core.validators.MinValueValidator(2020)],
                    ),
                ),
                (
                    "end_year",
                    models.IntegerField(
                        help_text="Ending year of strategic plan",
                        validators=[django.core.validators.MinValueValidator(2020)],
                    ),
                ),
                ("vision", models.TextField(help_text="Long-term vision statement")),
                (
                    "mission",
                    models.TextField(
                        help_text="Mission statement describing purpose and approach"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("approved", "Approved"),
                            ("active", "Active"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        help_text="Current status of strategic plan",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="strategic_plans_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Strategic Plan",
                "verbose_name_plural": "Strategic Plans",
                "ordering": ["-start_year"],
            },
        ),
        migrations.CreateModel(
            name="StrategicGoal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Goal title (e.g., 'Improve education access in OBCs')",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the strategic goal"
                    ),
                ),
                (
                    "target_metric",
                    models.CharField(
                        help_text="Metric used to measure goal achievement (e.g., 'Number of schools built')",
                        max_length=255,
                    ),
                ),
                (
                    "target_value",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Target value for the metric",
                        max_digits=10,
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Current value of the metric",
                        max_digits=10,
                    ),
                ),
                (
                    "completion_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Percentage completion (0-100)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("critical", "Critical"),
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("deferred", "Deferred"),
                        ],
                        default="not_started",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "strategic_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="goals",
                        to="planning.strategicplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Strategic Goal",
                "verbose_name_plural": "Strategic Goals",
                "ordering": ["priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnnualWorkPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Annual plan title (e.g., 'OOBC Annual Work Plan 2025')",
                        max_length=255,
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        help_text="Fiscal year for this work plan",
                        validators=[django.core.validators.MinValueValidator(2020)],
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Overview of annual priorities and approach",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("approved", "Approved"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "budget_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total budget allocation for this annual plan",
                        max_digits=15,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="annual_plans_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "strategic_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annual_plans",
                        to="planning.strategicplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Annual Work Plan",
                "verbose_name_plural": "Annual Work Plans",
                "ordering": ["-year"],
            },
        ),
        migrations.CreateModel(
            name="WorkPlanObjective",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Objective title (e.g., 'Build 5 new classrooms in Lanao del Sur OBCs')",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed description of the objective"),
                ),
                ("target_date", models.DateField(help_text="Target completion date")),
                (
                    "completion_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "indicator",
                    models.CharField(
                        help_text="How to measure success (e.g., 'Number of classrooms constructed')",
                        max_length=255,
                    ),
                ),
                (
                    "baseline_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Starting value of indicator",
                        max_digits=10,
                    ),
                ),
                (
                    "target_value",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Target value of indicator",
                        max_digits=10,
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Current value of indicator",
                        max_digits=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("deferred", "Deferred"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="not_started",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "annual_work_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="objectives",
                        to="planning.annualworkplan",
                    ),
                ),
                (
                    "strategic_goal",
                    models.ForeignKey(
                        blank=True,
                        help_text="Strategic goal this objective contributes to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="work_plan_objectives",
                        to="planning.strategicgoal",
                    ),
                ),
            ],
            options={
                "verbose_name": "Work Plan Objective",
                "verbose_name_plural": "Work Plan Objectives",
                "ordering": ["target_date", "-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="strategicplan",
            index=models.Index(
                fields=["start_year", "end_year"], name="planning_st_start_y_19df57_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="strategicplan",
            index=models.Index(fields=["status"], name="planning_st_status_9f1c5f_idx"),
        ),
        migrations.AddIndex(
            model_name="annualworkplan",
            index=models.Index(fields=["year"], name="planning_an_year_1d4dd1_idx"),
        ),
        migrations.AddIndex(
            model_name="annualworkplan",
            index=models.Index(fields=["status"], name="planning_an_status_a0092b_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="annualworkplan",
            unique_together={("strategic_plan", "year")},
        ),
    ]
