# Generated by Django 4.2.24 on 2025-09-29 08:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0012_add_multiple_teams_to_stafftask'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('communities', '0023_rename_communities_spatia_communi_8a49cd_idx_communities_communi_896657_idx_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProvinceCoverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obc_id', models.CharField(blank=True, default='', help_text='Unique identifier for the OBC (e.g., R12-SK-PAL-001)', max_length=50)),
                ('source_document_reference', models.TextField(blank=True, help_text="Document source and page number (e.g., 'OBC MANA Region 12, p.7')")),
                ('community_names', models.TextField(blank=True, default='', help_text='Common name(s) used to refer to the community (comma-separated)')),
                ('purok_sitio', models.CharField(blank=True, help_text='Specific Purok/Sitio within the barangay', max_length=255)),
                ('specific_location', models.CharField(blank=True, help_text='Additional specific location details', max_length=255)),
                ('settlement_type', models.CharField(choices=[('village', 'Village'), ('subdivision', 'Subdivision'), ('sitio', 'Sitio'), ('purok', 'Purok'), ('compound', 'Compound'), ('dispersed', 'Dispersed Settlement')], default='village', help_text='Type of settlement', max_length=20)),
                ('latitude', models.FloatField(blank=True, help_text='Latitude coordinate for mapping', null=True)),
                ('longitude', models.FloatField(blank=True, help_text='Longitude coordinate for mapping', null=True)),
                ('proximity_to_barmm', models.CharField(blank=True, choices=[('adjacent', 'Adjacent to BARMM'), ('near', 'Near BARMM'), ('distant', 'Distant from BARMM')], help_text='Proximity to BARMM boundaries', max_length=20)),
                ('estimated_obc_population', models.PositiveIntegerField(blank=True, help_text='Number of individuals identified as part of the OBC', null=True)),
                ('total_barangay_population', models.PositiveIntegerField(blank=True, help_text='Total barangay population for context', null=True)),
                ('households', models.PositiveIntegerField(blank=True, help_text='Number of households in the community', null=True)),
                ('families', models.PositiveIntegerField(blank=True, help_text='Number of families in the community', null=True)),
                ('primary_ethnolinguistic_group', models.CharField(blank=True, choices=[('badjao', 'Badjao'), ('iranun', 'Iranun'), ('jama_mapun', 'Jama Mapun'), ('kagan_kalagan', 'Kagan/Kalagan'), ('kolibugan', 'Kolibugan'), ('maguindanaon', 'Maguindanaon'), ('meranaw', 'Meranaw'), ('molbog', 'Molbog'), ('palawani', 'Palawani'), ('sama', 'Sama'), ('sangil', 'Sangil'), ('tausug', 'Tausug'), ('yakan', 'Yakan'), ('other', 'Other')], help_text='Primary ethnolinguistic group', max_length=50)),
                ('other_ethnolinguistic_groups', models.TextField(blank=True, help_text='Other ethnolinguistic groups present (comma-separated)')),
                ('languages_spoken', models.TextField(blank=True, help_text='Languages spoken in the community (comma-separated)')),
                ('children_0_9', models.PositiveIntegerField(blank=True, help_text='Number of children aged 0-9', null=True)),
                ('adolescents_10_14', models.PositiveIntegerField(blank=True, help_text='Number of adolescents aged 10-14', null=True)),
                ('youth_15_30', models.PositiveIntegerField(blank=True, help_text='Number of youth aged 15-30', null=True)),
                ('adults_31_59', models.PositiveIntegerField(blank=True, help_text='Number of adults aged 31-59', null=True)),
                ('seniors_60_plus', models.PositiveIntegerField(blank=True, help_text='Number of seniors aged 60 and above', null=True)),
                ('women_count', models.PositiveIntegerField(blank=True, help_text='Number of women in the community', null=True)),
                ('solo_parents_count', models.PositiveIntegerField(blank=True, help_text='Number of solo parents', null=True)),
                ('pwd_count', models.PositiveIntegerField(blank=True, help_text='Number of Persons with Disabilities (PWDs)', null=True)),
                ('farmers_count', models.PositiveIntegerField(blank=True, help_text='Number of farmers', null=True)),
                ('fisherfolk_count', models.PositiveIntegerField(blank=True, help_text='Number of fisherfolk', null=True)),
                ('indigenous_peoples_count', models.PositiveIntegerField(blank=True, help_text='Number of Indigenous Peoples (if distinct within OBC)', null=True)),
                ('idps_count', models.PositiveIntegerField(blank=True, help_text='Number of Internally Displaced Persons (IDPs)', null=True)),
                ('csos_count', models.PositiveIntegerField(blank=True, help_text='Number of Civil Society Organizations (CSOs) in the community', null=True)),
                ('associations_count', models.PositiveIntegerField(blank=True, help_text='Number of Associations in the community', null=True)),
                ('unemployed_count', models.PositiveIntegerField(blank=True, help_text='Number of unemployed individuals', null=True)),
                ('migrants_transients_count', models.PositiveIntegerField(blank=True, help_text='Number of migrants/transients', null=True)),
                ('other_vulnerable_sectors', models.TextField(blank=True, help_text='Other vulnerable sectors not listed above')),
                ('primary_livelihoods', models.TextField(blank=True, help_text='Primary livelihoods (e.g., Rice Farming, Coconut Production, Fishing)')),
                ('secondary_livelihoods', models.TextField(blank=True, help_text='Secondary livelihoods in the community')),
                ('estimated_poverty_incidence', models.CharField(blank=True, choices=[('unknown', 'Unknown'), ('very_low', 'Very Low (<10%)'), ('low', 'Low (10-20%)'), ('moderate', 'Moderate (20-30%)'), ('high', 'High (30-40%)'), ('very_high', 'Very High (40-50%)'), ('extremely_high', 'Extremely High (>50%)')], help_text='Estimated poverty incidence within OBC', max_length=20)),
                ('access_formal_education', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('none', 'None')], help_text='Access to formal schools', max_length=20)),
                ('access_als', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('none', 'None')], help_text='Access to Alternative Learning System (ALS)', max_length=20)),
                ('access_madrasah', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('none', 'None')], help_text='Access to Madrasah/Islamic education', max_length=20)),
                ('access_healthcare', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('none', 'None')], help_text='Access to healthcare facilities', max_length=20)),
                ('access_clean_water', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('none', 'None')], help_text='Access to clean water supply', max_length=20)),
                ('access_sanitation', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('none', 'None')], help_text='Access to sanitation facilities', max_length=20)),
                ('access_electricity', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('none', 'None')], help_text='Access to electricity', max_length=20)),
                ('access_roads_transport', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('none', 'None')], help_text='Access to roads and transportation', max_length=20)),
                ('access_communication', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('none', 'None')], help_text='Access to communication (mobile/internet)', max_length=20)),
                ('land_tenure_issues', models.TextField(blank=True, help_text='Land tenure issues (lack of titles, disputes, ancestral domain claims)')),
                ('number_of_peoples_organizations', models.PositiveIntegerField(blank=True, help_text="Number of People's Organizations in the community", null=True)),
                ('number_of_cooperatives', models.PositiveIntegerField(blank=True, help_text='Number of Cooperatives in the community', null=True)),
                ('number_of_social_enterprises', models.PositiveIntegerField(blank=True, help_text='Number of Social Enterprises in the community', null=True)),
                ('number_of_micro_enterprises', models.PositiveIntegerField(blank=True, help_text='Number of Micro-Enterprises (such as Sari-Sari Stores, etc.)', null=True)),
                ('number_of_unbanked_obc', models.PositiveIntegerField(blank=True, help_text='Number of OBC Individuals without Access to Financial Services (Unbanked)', null=True)),
                ('financial_access_level', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('none', 'None')], help_text='Access to banking and financial services', max_length=20)),
                ('brief_historical_background', models.TextField(blank=True, help_text='Key historical narratives of the community in the area')),
                ('established_year', models.PositiveIntegerField(blank=True, help_text='Year the community was established', null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2030)])),
                ('origin_story', models.TextField(blank=True, help_text='Story of how the community was established')),
                ('migration_history', models.TextField(blank=True, help_text='Migration history and patterns')),
                ('cultural_practices_traditions', models.TextField(blank=True, help_text='Notable customs, traditions, festivals')),
                ('religious_affiliation', models.TextField(blank=True, help_text='Religious affiliation and specific practices')),
                ('traditional_leaders_role', models.TextField(blank=True, help_text='Role of traditional leaders (Imams, Elders, Chieftains)')),
                ('cultural_preservation_efforts', models.TextField(blank=True, help_text='Existing cultural preservation efforts')),
                ('mosques_count', models.PositiveIntegerField(default=0, help_text='Number of mosques accessible to the community')),
                ('madrasah_count', models.PositiveIntegerField(default=0, help_text='Number of madrasah/Islamic schools accessible to the community')),
                ('asatidz_count', models.PositiveIntegerField(default=0, help_text='Number of Asatidz (Islamic teachers/instructors)')),
                ('religious_leaders_count', models.PositiveIntegerField(default=0, help_text='Number of Ulama or religious leaders (Imam, Ustadz, etc.)')),
                ('other_cultural_facilities', models.TextField(blank=True, help_text='Other cultural facilities, artefacts, or assets not listed above')),
                ('formal_political_representation', models.TextField(blank=True, help_text='Presence in Barangay Council, LGU representation')),
                ('informal_leadership_structures', models.TextField(blank=True, help_text='Description of informal leadership structures')),
                ('community_organizations', models.TextField(blank=True, help_text='Community organizations/associations (name, focus, contact)')),
                ('relationship_with_lgu', models.CharField(blank=True, choices=[('collaborative', 'Collaborative'), ('strained', 'Strained'), ('minimal', 'Minimal'), ('good', 'Good'), ('excellent', 'Excellent')], help_text='Relationship with LGU', max_length=20)),
                ('participation_local_governance', models.TextField(blank=True, help_text='Participation in local governance and planning')),
                ('access_government_info', models.TextField(blank=True, help_text='Access to information on government programs')),
                ('governance_policy_challenges', models.TextField(blank=True, help_text='Marginalization, lack of representation issues')),
                ('access_public_services_challenges', models.TextField(blank=True, help_text='Challenges in accessing education, health, infrastructure')),
                ('land_ownership_security_issues', models.TextField(blank=True, help_text='Land ownership and security challenges')),
                ('economic_disparities', models.TextField(blank=True, help_text='Poverty, limited employment, economic challenges')),
                ('social_instability_conflict', models.TextField(blank=True, help_text='Rido, security issues, social conflicts')),
                ('cultural_miscommunication', models.TextField(blank=True, help_text='Cultural miscommunication challenges')),
                ('gender_inequality_issues', models.TextField(blank=True, help_text='Gender inequality, early marriage issues')),
                ('substance_abuse_issues', models.TextField(blank=True, help_text='Drug use, substance abuse issues')),
                ('investment_scam_issues', models.TextField(blank=True, help_text='Investment scams and financial fraud issues')),
                ('environmental_degradation', models.TextField(blank=True, help_text='Mining, illegal fishing, environmental issues')),
                ('other_challenges', models.TextField(blank=True, help_text='Other specific challenges (ISAL education, Halal industry, etc.)')),
                ('challenges_impact', models.TextField(blank=True, help_text='Impact of these challenges on the community')),
                ('key_aspirations', models.TextField(blank=True, help_text='Key community aspirations (poverty eradication, improved services, etc.)')),
                ('infrastructure_priorities', models.TextField(blank=True, help_text='Infrastructure development priorities (roads, water, health, schools)')),
                ('livelihood_program_priorities', models.TextField(blank=True, help_text='Livelihood program priorities (agriculture, fisheries, SMEs, Halal, ecotourism)')),
                ('education_priorities', models.TextField(blank=True, help_text='Education priorities (scholarships, skills training, Madrasah support)')),
                ('healthcare_priorities', models.TextField(blank=True, help_text='Healthcare access priorities')),
                ('cultural_preservation_priorities', models.TextField(blank=True, help_text='Cultural preservation initiative priorities')),
                ('peace_security_priorities', models.TextField(blank=True, help_text='Peace and order/conflict resolution priorities')),
                ('specific_project_proposals', models.TextField(blank=True, help_text='Specific project proposals/ideas from the community')),
                ('unemployment_rate', models.CharField(blank=True, choices=[('', 'Select...'), ('unknown', 'Unknown'), ('very_low', 'Very Low (<10%)'), ('low', 'Low (10-20%)'), ('moderate', 'Moderate (20-30%)'), ('high', 'High (30-40%)'), ('very_high', 'Very High (40-50%)'), ('extremely_high', 'Extremely High (>50%)')], help_text='Estimated unemployment rate within the community', max_length=20)),
                ('needs_assessment_date', models.DateField(blank=True, help_text='Date of last needs assessment', null=True)),
                ('key_findings_last_assessment', models.TextField(blank=True, help_text='Key findings from last needs assessment')),
                ('assessment_data_sources', models.TextField(blank=True, help_text='Data sources (community consultations, surveys, LGU data)')),
                ('identified_gaps', models.TextField(blank=True, help_text='Identified gaps based on assessments')),
                ('key_community_leaders', models.TextField(blank=True, help_text='Key community leader(s)/focal person(s) with contact details')),
                ('relevant_lgu_officials', models.TextField(blank=True, help_text='Relevant LGU official(s) and their contact information')),
                ('community_leader', models.CharField(blank=True, help_text='Name of the primary community leader', max_length=255)),
                ('leader_contact', models.CharField(blank=True, help_text='Contact information for community leader', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this community record is active')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the community')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether this record has been archived instead of fully removed.')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when this record was archived for removal.', null=True)),
                ('total_municipalities', models.PositiveIntegerField(blank=True, help_text='Number of municipalities or cities with OBC coverage', null=True)),
                ('total_obc_communities', models.PositiveIntegerField(blank=True, help_text='Total barangay-level OBC communities aggregated from municipalities', null=True)),
                ('key_municipalities', models.TextField(blank=True, help_text='Municipalities with notable Bangsamoro presence (comma-separated)')),
                ('existing_support_programs', models.TextField(blank=True, help_text='Active support programs at the provincial level')),
                ('auto_sync', models.BooleanField(default=True, help_text='Keep provincial totals in sync with municipal coverage records')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who recorded this province', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='province_coverages_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who archived this record for deletion review.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('province', models.OneToOneField(help_text='Province covering multiple municipal OBC records', on_delete=django.db.models.deletion.CASCADE, related_name='obc_coverage', to='common.province')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='province_coverages_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bangsamoro Province OBC',
                'verbose_name_plural': 'Bangsamoro Province OBCs',
                'ordering': ['province__region__name', 'province__name'],
            },
        ),
    ]
