# Generated by Django 4.2.16 on 2025-09-21 03:31

from django.db import migrations, models


def copy_religious_facilities_forward(apps, schema_editor):
    """Populate count fields using legacy boolean values."""

    OBCCommunity = apps.get_model('communities', 'OBCCommunity')
    MunicipalityCoverage = apps.get_model('communities', 'MunicipalityCoverage')

    # Note: OBCCommunity never had has_mosque/has_madrasah fields (they were only
    # added to MunicipalityCoverage in migration 0009), so getattr returns False
    # by default, resulting in mosques_count=0 and madrasah_count=0.
    for community in OBCCommunity.objects.all():
        mosques = 1 if getattr(community, 'has_mosque', False) else 0
        madrasah = 1 if getattr(community, 'has_madrasah', False) else 0
        # Update without triggering model save logic
        OBCCommunity.objects.filter(pk=community.pk).update(
            mosques_count=mosques,
            madrasah_count=madrasah,
        )

    for coverage in MunicipalityCoverage.objects.all():
        mosques = 1 if getattr(coverage, 'has_mosque', False) else 0
        madrasah = 1 if getattr(coverage, 'has_madrasah', False) else 0
        MunicipalityCoverage.objects.filter(pk=coverage.pk).update(
            mosques_count=mosques,
            madrasah_count=madrasah,
        )


def copy_religious_facilities_backward(apps, schema_editor):
    """Restore boolean fields based on count values when rolling back."""

    # Note: OBCCommunity never had has_mosque/has_madrasah fields, so we only
    # restore them for MunicipalityCoverage during rollback

    MunicipalityCoverage = apps.get_model('communities', 'MunicipalityCoverage')

    for coverage in MunicipalityCoverage.objects.all():
        has_mosque = bool(getattr(coverage, 'mosques_count', 0))
        has_madrasah = bool(getattr(coverage, 'madrasah_count', 0))
        MunicipalityCoverage.objects.filter(pk=coverage.pk).update(
            has_mosque=has_mosque,
            has_madrasah=has_madrasah,
        )


class Migration(migrations.Migration):

    dependencies = [
        ('communities', '0010_alter_municipalitycoverage_options_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='municipalitycoverage',
            name='madrasah_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of madrasah/Islamic schools accessible to the community'),
        ),
        migrations.AddField(
            model_name='municipalitycoverage',
            name='mosques_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of mosques accessible to the community'),
        ),
        migrations.AddField(
            model_name='obccommunity',
            name='madrasah_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of madrasah/Islamic schools accessible to the community'),
        ),
        migrations.AddField(
            model_name='obccommunity',
            name='mosques_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of mosques accessible to the community'),
        ),
        migrations.RunPython(
            copy_religious_facilities_forward,
            copy_religious_facilities_backward,
        ),
        migrations.RemoveField(
            model_name='municipalitycoverage',
            name='has_madrasah',
        ),
        migrations.RemoveField(
            model_name='municipalitycoverage',
            name='has_mosque',
        ),
        # Note: OBCCommunity never had has_madrasah/has_mosque fields added
        # (migration 0009 only added them to MunicipalityCoverage), so we don't
        # remove them here. The count fields are added to both models via the
        # base class CommunityProfileBase.
        migrations.AlterField(
            model_name='municipalitycoverage',
            name='religious_leaders_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of Ulama or religious leaders (Imam, Ustadz, etc.)'),
        ),
        migrations.AlterField(
            model_name='obccommunity',
            name='religious_leaders_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of Ulama or religious leaders (Imam, Ustadz, etc.)'),
        ),
    ]
