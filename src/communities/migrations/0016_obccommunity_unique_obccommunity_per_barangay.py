# Generated by Django 4.2.16 on 2025-09-22 06:21

from django.db import migrations, models


def deduplicate_barangay_communities(apps, schema_editor):
    """Keep only one OBCCommunity per barangay before enforcing uniqueness."""

    OBCCommunity = apps.get_model("communities", "OBCCommunity")
    duplicates = (
        OBCCommunity.objects.values("barangay_id")
        .annotate(count=models.Count("id"))
        .filter(count__gt=1)
    )

    for entry in duplicates:
        barangay_id = entry["barangay_id"]
        communities = (
            OBCCommunity.objects.filter(barangay_id=barangay_id)
            .order_by("id")
            .values_list("id", flat=True)
        )
        # Keep the first record, delete the rest.
        keep_id = communities[0]
        OBCCommunity.objects.filter(barangay_id=barangay_id).exclude(id=keep_id).delete()


def noop_reverse(apps, schema_editor):
    """No-op reverse migration."""



class Migration(migrations.Migration):

    dependencies = [
        ('communities', '0015_municipalitycoverage_asatidz_count_and_more'),
    ]

    operations = [
        migrations.RunPython(deduplicate_barangay_communities, noop_reverse),
        migrations.AddConstraint(
            model_name='obccommunity',
            constraint=models.UniqueConstraint(fields=('barangay',), name='unique_obccommunity_per_barangay'),
        ),
    ]
