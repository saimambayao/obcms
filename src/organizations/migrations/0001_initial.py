# Generated by Django 5.2.7 on 2025-10-24 14:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, help_text='Unique organization code (e.g., OOBC, MOH, MOLE)', max_length=20, unique=True)),
                ('name', models.CharField(help_text='Full organization name', max_length=200)),
                ('acronym', models.CharField(blank=True, help_text='Alternative acronym (if different from code)', max_length=20)),
                ('org_type', models.CharField(choices=[('ministry', 'Ministry'), ('office', 'Office'), ('agency', 'Agency'), ('special', 'Special Body'), ('commission', 'Commission')], help_text='Type of organization', max_length=20)),
                ('mandate', models.TextField(blank=True, help_text='Legal mandate and responsibilities')),
                ('powers', models.JSONField(blank=True, default=list, help_text='List of powers and functions')),
                ('enable_mana', models.BooleanField(default=True, help_text='Enable MANA (Needs Assessment) module')),
                ('enable_planning', models.BooleanField(default=True, help_text='Enable Planning module')),
                ('enable_budgeting', models.BooleanField(default=True, help_text='Enable Budgeting module (Parliament Bill No. 325)')),
                ('enable_me', models.BooleanField(default=True, help_text='Enable Monitoring & Evaluation module', verbose_name='Enable M&E')),
                ('enable_coordination', models.BooleanField(default=True, help_text='Enable Coordination module')),
                ('enable_policies', models.BooleanField(default=True, help_text='Enable Policies/Recommendations module')),
                ('head_official', models.CharField(blank=True, help_text='Name of head official (Minister, Director, etc.)', max_length=200)),
                ('head_title', models.CharField(blank=True, help_text='Title of head official', max_length=100)),
                ('email', models.EmailField(blank=True, help_text='Primary email address', max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Primary phone number', max_length=20)),
                ('website', models.URLField(blank=True, help_text='Official website URL')),
                ('address', models.TextField(blank=True, help_text='Physical address')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this organization is currently active in BMMS')),
                ('is_pilot', models.BooleanField(db_index=True, default=False, help_text='Whether this is a pilot MOA (MOH, MOLE, MAFAR)')),
                ('onboarding_date', models.DateField(blank=True, help_text='Date when organization was onboarded to BMMS', null=True)),
                ('go_live_date', models.DateField(blank=True, help_text='Date when organization went live in BMMS', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('primary_focal_person', models.ForeignKey(blank=True, help_text='Primary focal person for this organization', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_focal_organizations', to=settings.AUTH_USER_MODEL)),
                ('primary_region', models.ForeignKey(blank=True, help_text='Primary region of operations', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_organizations', to='common.region')),
                ('service_areas', models.ManyToManyField(blank=True, help_text='Municipalities served by this organization', related_name='served_by_organizations', to='common.municipality')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('manager', 'Manager'), ('staff', 'Staff'), ('viewer', 'Viewer')], default='staff', help_text='Role in the organization', max_length=20)),
                ('is_primary', models.BooleanField(db_index=True, default=False, help_text="Whether this is the user's primary organization")),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this membership is currently active')),
                ('position', models.CharField(blank=True, help_text='Job title or position within the organization', max_length=200)),
                ('department', models.CharField(blank=True, help_text='Department or unit within the organization', max_length=200)),
                ('can_manage_users', models.BooleanField(default=False, help_text='Can add/remove users and manage memberships')),
                ('can_approve_plans', models.BooleanField(default=False, help_text='Can approve strategic plans and work plans')),
                ('can_approve_budgets', models.BooleanField(default=False, help_text='Can approve budget proposals')),
                ('can_view_reports', models.BooleanField(default=True, help_text='Can view reports and analytics')),
                ('joined_date', models.DateField(auto_now_add=True, help_text='Date when user joined this organization')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(help_text='Organization', on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='organizations.organization')),
                ('user', models.ForeignKey(help_text='User account', on_delete=django.db.models.deletion.CASCADE, related_name='organization_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization Membership',
                'verbose_name_plural': 'Organization Memberships',
                'ordering': ['-is_primary', 'user__username'],
            },
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['code'], name='organizatio_code_9d1386_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['org_type', 'is_active'], name='organizatio_org_typ_43e278_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['is_pilot'], name='organizatio_is_pilo_719cc1_idx'),
        ),
        migrations.AddIndex(
            model_name='organizationmembership',
            index=models.Index(fields=['user', 'is_primary'], name='organizatio_user_id_9457eb_idx'),
        ),
        migrations.AddIndex(
            model_name='organizationmembership',
            index=models.Index(fields=['organization', 'role'], name='organizatio_organiz_e1169f_idx'),
        ),
        migrations.AddIndex(
            model_name='organizationmembership',
            index=models.Index(fields=['user', 'organization'], name='organizatio_user_id_f058b7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='organizationmembership',
            unique_together={('user', 'organization')},
        ),
    ]
