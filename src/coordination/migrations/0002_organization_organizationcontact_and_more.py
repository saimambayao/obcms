# Generated by Django 4.2.21 on 2025-05-22 12:29

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("coordination", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Full name of the organization", max_length=255
                    ),
                ),
                (
                    "acronym",
                    models.CharField(
                        blank=True,
                        help_text="Organization acronym (e.g., MILF, ARMM, DOH)",
                        max_length=20,
                    ),
                ),
                (
                    "organization_type",
                    models.CharField(
                        choices=[
                            ("bmoa", "BARMM Ministry/Agency/Office"),
                            ("lgu", "Local Government Unit"),
                            ("nga", "National Government Agency"),
                            ("ingo", "International NGO"),
                            ("ngo", "Non-Governmental Organization"),
                            ("cso", "Civil Society Organization"),
                            ("academic", "Academic Institution"),
                            ("religious", "Religious Organization"),
                            ("private", "Private Sector"),
                            ("media", "Media Organization"),
                            ("donor", "Donor Agency"),
                            ("tribal", "Tribal/Indigenous Organization"),
                            ("other", "Other"),
                        ],
                        help_text="Type of organization",
                        max_length=15,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the organization and its mandate",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True, help_text="Physical address of the organization"
                    ),
                ),
                (
                    "mailing_address",
                    models.TextField(
                        blank=True,
                        help_text="Mailing address (if different from physical address)",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="Primary phone number", max_length=50
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True, help_text="Mobile phone number", max_length=50
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, help_text="Primary email address", max_length=254
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, help_text="Organization website"),
                ),
                (
                    "social_media",
                    models.JSONField(
                        blank=True,
                        help_text="Social media accounts (Facebook, Twitter, etc.)",
                        null=True,
                    ),
                ),
                (
                    "head_of_organization",
                    models.CharField(
                        blank=True,
                        help_text="Name of the head of organization (e.g., Minister, Mayor, Director)",
                        max_length=255,
                    ),
                ),
                (
                    "head_position",
                    models.CharField(
                        blank=True,
                        help_text="Position title of the head of organization",
                        max_length=100,
                    ),
                ),
                (
                    "focal_person",
                    models.CharField(
                        blank=True,
                        help_text="Name of the designated focal person for OBC matters",
                        max_length=255,
                    ),
                ),
                (
                    "focal_person_position",
                    models.CharField(
                        blank=True,
                        help_text="Position of the focal person",
                        max_length=100,
                    ),
                ),
                (
                    "focal_person_contact",
                    models.CharField(
                        blank=True,
                        help_text="Contact information for the focal person",
                        max_length=100,
                    ),
                ),
                (
                    "focal_person_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email address of the focal person",
                        max_length=254,
                    ),
                ),
                (
                    "partnership_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("implementing", "Implementing Partner"),
                            ("funding", "Funding Partner"),
                            ("technical", "Technical Partner"),
                            ("coordinating", "Coordinating Agency"),
                            ("beneficiary", "Beneficiary Organization"),
                            ("observer", "Observer"),
                            ("other", "Other"),
                        ],
                        help_text="Level of partnership with OOBC",
                        max_length=15,
                    ),
                ),
                (
                    "partnership_start_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when partnership was established",
                        null=True,
                    ),
                ),
                (
                    "partnership_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                            ("terminated", "Terminated"),
                        ],
                        default="active",
                        help_text="Current partnership status",
                        max_length=20,
                    ),
                ),
                (
                    "areas_of_expertise",
                    models.TextField(
                        blank=True, help_text="Areas of expertise and services provided"
                    ),
                ),
                (
                    "geographic_coverage",
                    models.TextField(
                        blank=True, help_text="Geographic areas of operation"
                    ),
                ),
                (
                    "target_beneficiaries",
                    models.TextField(
                        blank=True,
                        help_text="Target beneficiaries and communities served",
                    ),
                ),
                (
                    "annual_budget",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Annual budget (in PHP)",
                        max_digits=15,
                        null=True,
                    ),
                ),
                (
                    "staff_count",
                    models.PositiveIntegerField(
                        blank=True, help_text="Number of staff members", null=True
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        blank=True,
                        help_text="Official registration number (SEC, DTI, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "tax_identification_number",
                    models.CharField(
                        blank=True,
                        help_text="Tax Identification Number (TIN)",
                        max_length=50,
                    ),
                ),
                (
                    "accreditation_details",
                    models.TextField(
                        blank=True, help_text="Accreditation details and certifications"
                    ),
                ),
                (
                    "last_engagement_date",
                    models.DateField(
                        blank=True,
                        help_text="Date of last engagement or communication",
                        null=True,
                    ),
                ),
                (
                    "engagement_frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("annually", "Annually"),
                            ("as_needed", "As Needed"),
                        ],
                        default="as_needed",
                        help_text="Frequency of engagement",
                        max_length=20,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes and observations"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this organization is currently active",
                    ),
                ),
                (
                    "is_priority",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is a priority partner organization",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this organization record",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_organizations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="OrganizationContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contact_type",
                    models.CharField(
                        choices=[
                            ("primary", "Primary Contact"),
                            ("secondary", "Secondary Contact"),
                            ("technical", "Technical Contact"),
                            ("administrative", "Administrative Contact"),
                            ("executive", "Executive Contact"),
                            ("field", "Field Contact"),
                            ("emergency", "Emergency Contact"),
                        ],
                        help_text="Type of contact",
                        max_length=15,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(help_text="First name", max_length=100),
                ),
                ("last_name", models.CharField(help_text="Last name", max_length=100)),
                (
                    "middle_name",
                    models.CharField(
                        blank=True, help_text="Middle name", max_length=100
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Professional title (Mr., Ms., Dr., Eng., etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        help_text="Position/designation in the organization",
                        max_length=150,
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, help_text="Department or unit", max_length=150
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, help_text="Email address", max_length=254
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="Phone number", max_length=50
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True, help_text="Mobile number", max_length=50
                    ),
                ),
                (
                    "alternative_email",
                    models.EmailField(
                        blank=True,
                        help_text="Alternative email address",
                        max_length=254,
                    ),
                ),
                (
                    "areas_of_responsibility",
                    models.TextField(
                        blank=True, help_text="Areas of responsibility and expertise"
                    ),
                ),
                (
                    "languages_spoken",
                    models.CharField(
                        blank=True,
                        help_text="Languages spoken (comma-separated)",
                        max_length=200,
                    ),
                ),
                (
                    "preferred_communication_method",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("phone", "Phone"),
                            ("mobile", "Mobile"),
                            ("letter", "Official Letter"),
                            ("meeting", "Face-to-face Meeting"),
                        ],
                        default="email",
                        help_text="Preferred method of communication",
                        max_length=20,
                    ),
                ),
                (
                    "best_contact_time",
                    models.CharField(
                        blank=True,
                        help_text="Best time to contact (e.g., 9AM-5PM weekdays)",
                        max_length=100,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this contact is currently active",
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the primary contact for the organization",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about this contact"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization this contact belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="coordination.organization",
                    ),
                ),
            ],
            options={
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the template", max_length=150),
                ),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("email", "Email Template"),
                            ("letter", "Letter Template"),
                            ("memo", "Memorandum Template"),
                            ("invitation", "Invitation Template"),
                            ("announcement", "Announcement Template"),
                            ("request", "Request Template"),
                            ("response", "Response Template"),
                            ("report", "Report Template"),
                            ("other", "Other Template"),
                        ],
                        help_text="Type of template",
                        max_length=15,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of when to use this template"
                    ),
                ),
                (
                    "subject_template",
                    models.CharField(
                        blank=True,
                        help_text="Subject line template (with placeholders)",
                        max_length=255,
                    ),
                ),
                (
                    "content_template",
                    models.TextField(
                        help_text="Content template (with placeholders like {{organization_name}}, {{date}}, etc.)"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fil", "Filipino"),
                            ("ar", "Arabic"),
                            ("maguindanaon", "Maguindanaon"),
                            ("maranao", "Maranao"),
                            ("tausug", "Tausug"),
                        ],
                        default="en",
                        help_text="Language of the template",
                        max_length=15,
                    ),
                ),
                (
                    "formal_level",
                    models.CharField(
                        choices=[
                            ("formal", "Formal"),
                            ("semi_formal", "Semi-Formal"),
                            ("informal", "Informal"),
                        ],
                        default="formal",
                        help_text="Level of formality",
                        max_length=15,
                    ),
                ),
                (
                    "usage_instructions",
                    models.TextField(
                        blank=True, help_text="Instructions on how to use this template"
                    ),
                ),
                (
                    "placeholders",
                    models.JSONField(
                        blank=True,
                        help_text="List of available placeholders and their descriptions",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this template is currently active",
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the default template for this type",
                    ),
                ),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=False,
                        help_text="Whether communications using this template require approval",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approver",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who can approve communications using this template",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="template_approvals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this template",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["template_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "schedule_type",
                    models.CharField(
                        choices=[
                            ("one_time", "One-time"),
                            ("recurring", "Recurring"),
                            ("follow_up", "Follow-up Reminder"),
                            ("deadline", "Deadline Reminder"),
                        ],
                        help_text="Type of schedule",
                        max_length=15,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title or description of the scheduled communication",
                        max_length=200,
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateField(
                        help_text="Date when communication should be sent/performed"
                    ),
                ),
                (
                    "scheduled_time",
                    models.TimeField(
                        blank=True,
                        help_text="Time when communication should be sent/performed",
                        null=True,
                    ),
                ),
                (
                    "recurrence_pattern",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("bi_weekly", "Bi-weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("semi_annual", "Semi-annual"),
                            ("annual", "Annual"),
                        ],
                        help_text="Recurrence pattern (for recurring schedules)",
                        max_length=15,
                    ),
                ),
                (
                    "recurrence_end_date",
                    models.DateField(
                        blank=True,
                        help_text="End date for recurring schedule",
                        null=True,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        help_text="Subject or title of the communication",
                        max_length=255,
                    ),
                ),
                (
                    "message_content",
                    models.TextField(
                        blank=True, help_text="Pre-written message content"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this schedule is currently active",
                    ),
                ),
                (
                    "last_executed",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time of last execution",
                        null=True,
                    ),
                ),
                (
                    "next_execution",
                    models.DateTimeField(help_text="Date and time of next execution"),
                ),
                (
                    "execution_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of times this schedule has been executed",
                    ),
                ),
                (
                    "send_reminder",
                    models.BooleanField(
                        default=True, help_text="Whether to send reminder notifications"
                    ),
                ),
                (
                    "reminder_days_before",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Days before scheduled date to send reminder",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes and instructions"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="User assigned to handle this communication",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_communications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific contact person (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="communication_schedules",
                        to="coordination.organizationcontact",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this schedule",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_schedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization for this scheduled communication",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communication_schedules",
                        to="coordination.organization",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        help_text="Communication template to use",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="coordination.communicationtemplate",
                    ),
                ),
            ],
            options={
                "ordering": ["next_execution"],
            },
        ),
        migrations.CreateModel(
            name="Communication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "communication_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("letter", "Official Letter"),
                            ("meeting", "Meeting"),
                            ("phone", "Phone Call"),
                            ("video_call", "Video Conference"),
                            ("site_visit", "Site Visit"),
                            ("workshop", "Workshop/Training"),
                            ("consultation", "Consultation"),
                            ("memo", "Memorandum"),
                            ("report", "Report Submission"),
                            ("request", "Request/Application"),
                            ("response", "Response/Reply"),
                            ("announcement", "Announcement"),
                            ("invitation", "Invitation"),
                            ("other", "Other"),
                        ],
                        help_text="Type of communication",
                        max_length=15,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[
                            ("incoming", "Incoming"),
                            ("outgoing", "Outgoing"),
                            ("internal", "Internal"),
                        ],
                        help_text="Direction of communication",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent"),
                            ("received", "Received"),
                            ("acknowledged", "Acknowledged"),
                            ("responded", "Responded"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        help_text="Current status of the communication",
                        max_length=15,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        help_text="Priority level of this communication",
                        max_length=10,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        help_text="Subject or title of the communication",
                        max_length=255,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Content or description of the communication"
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True,
                        help_text="Official reference number (for letters, memos, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "communication_date",
                    models.DateField(help_text="Date of the communication"),
                ),
                (
                    "communication_time",
                    models.TimeField(
                        blank=True,
                        help_text="Time of the communication (for calls, meetings, etc.)",
                        null=True,
                    ),
                ),
                (
                    "due_date",
                    models.DateField(
                        blank=True,
                        help_text="Due date for response or action",
                        null=True,
                    ),
                ),
                (
                    "sender",
                    models.CharField(
                        blank=True, help_text="Name of the sender", max_length=255
                    ),
                ),
                (
                    "sender_position",
                    models.CharField(
                        blank=True, help_text="Position of the sender", max_length=150
                    ),
                ),
                (
                    "recipient",
                    models.CharField(
                        blank=True, help_text="Name of the recipient", max_length=255
                    ),
                ),
                (
                    "recipient_position",
                    models.CharField(
                        blank=True,
                        help_text="Position of the recipient",
                        max_length=150,
                    ),
                ),
                (
                    "cc_recipients",
                    models.TextField(
                        blank=True, help_text="CC recipients (one per line)"
                    ),
                ),
                (
                    "requires_follow_up",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this communication requires follow-up",
                    ),
                ),
                (
                    "follow_up_date",
                    models.DateField(
                        blank=True, help_text="Scheduled follow-up date", null=True
                    ),
                ),
                (
                    "follow_up_notes",
                    models.TextField(
                        blank=True, help_text="Follow-up notes and action items"
                    ),
                ),
                (
                    "follow_up_completed",
                    models.BooleanField(
                        default=False, help_text="Whether follow-up has been completed"
                    ),
                ),
                (
                    "response_received",
                    models.BooleanField(
                        default=False, help_text="Whether a response has been received"
                    ),
                ),
                (
                    "response_date",
                    models.DateField(
                        blank=True, help_text="Date response was received", null=True
                    ),
                ),
                (
                    "response_content",
                    models.TextField(
                        blank=True, help_text="Content of the response received"
                    ),
                ),
                (
                    "attachments",
                    models.JSONField(
                        blank=True,
                        help_text="List of attached files (JSON format)",
                        null=True,
                    ),
                ),
                (
                    "meeting_minutes",
                    models.TextField(
                        blank=True, help_text="Meeting minutes (for meetings)"
                    ),
                ),
                (
                    "outcomes",
                    models.TextField(
                        blank=True,
                        help_text="Outcomes and decisions from the communication",
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="Tags for categorization (comma-separated)",
                        max_length=500,
                    ),
                ),
                (
                    "topic_areas",
                    models.CharField(
                        blank=True,
                        help_text="Topic areas discussed (comma-separated)",
                        max_length=500,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific contact person (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="communications",
                        to="coordination.organizationcontact",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization involved in this communication",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communications",
                        to="coordination.organization",
                    ),
                ),
                (
                    "recorded_by",
                    models.ForeignKey(
                        help_text="User who recorded this communication",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="recorded_communications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_engagement",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related stakeholder engagement (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="communications",
                        to="coordination.stakeholderengagement",
                    ),
                ),
            ],
            options={
                "ordering": ["-communication_date", "-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="organizationcontact",
            index=models.Index(
                fields=["organization", "contact_type"],
                name="coordinatio_organiz_942310_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="organizationcontact",
            index=models.Index(
                fields=["is_active", "is_primary"],
                name="coordinatio_is_acti_1dbb5d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["organization_type", "partnership_status"],
                name="coordinatio_organiz_8876a7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["is_active", "is_priority"],
                name="coordinatio_is_acti_4f47d7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["partnership_level", "partnership_status"],
                name="coordinatio_partner_e62ae9_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="communicationtemplate",
            unique_together={("template_type", "is_default", "language")},
        ),
        migrations.AddIndex(
            model_name="communicationschedule",
            index=models.Index(
                fields=["organization", "is_active"],
                name="coordinatio_organiz_50f366_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="communicationschedule",
            index=models.Index(
                fields=["next_execution", "is_active"],
                name="coordinatio_next_ex_5be056_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="communicationschedule",
            index=models.Index(
                fields=["assigned_to", "is_active"],
                name="coordinatio_assigne_343588_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="communication",
            index=models.Index(
                fields=["organization", "communication_type"],
                name="coordinatio_organiz_83aec9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="communication",
            index=models.Index(
                fields=["direction", "status"], name="coordinatio_directi_c29490_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="communication",
            index=models.Index(
                fields=["communication_date", "priority"],
                name="coordinatio_communi_0dd3af_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="communication",
            index=models.Index(
                fields=["requires_follow_up", "follow_up_date"],
                name="coordinatio_require_108be2_idx",
            ),
        ),
    ]
