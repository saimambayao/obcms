# Generated by Django 5.2.7 on 2025-10-24 14:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ai_assistant', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('policy_tracking', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='aiconversation',
            name='related_policy',
            field=models.ForeignKey(blank=True, help_text='Policy recommendation this conversation relates to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_conversations', to='policy_tracking.policyrecommendation'),
        ),
        migrations.AddField(
            model_name='aiconversation',
            name='user',
            field=models.ForeignKey(help_text='User who initiated the conversation', on_delete=django.db.models.deletion.CASCADE, related_name='ai_conversations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aigenerateddocument',
            name='conversation',
            field=models.ForeignKey(blank=True, help_text='Conversation that generated this document', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_documents', to='ai_assistant.aiconversation'),
        ),
        migrations.AddField(
            model_name='aigenerateddocument',
            name='generated_by',
            field=models.ForeignKey(help_text='User who generated this document', on_delete=django.db.models.deletion.PROTECT, related_name='generated_documents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aigenerateddocument',
            name='related_policy',
            field=models.ForeignKey(help_text='Policy recommendation this document relates to', on_delete=django.db.models.deletion.CASCADE, related_name='ai_generated_documents', to='policy_tracking.policyrecommendation'),
        ),
        migrations.AddField(
            model_name='aigenerateddocument',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, help_text='User who reviewed this document', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_ai_documents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aiinsight',
            name='conversation',
            field=models.ForeignKey(blank=True, help_text='Conversation that generated this insight', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insights', to='ai_assistant.aiconversation'),
        ),
        migrations.AddField(
            model_name='aiinsight',
            name='generated_by',
            field=models.ForeignKey(help_text='User who generated this insight', on_delete=django.db.models.deletion.PROTECT, related_name='generated_insights', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aiinsight',
            name='related_policy',
            field=models.ForeignKey(help_text='Policy recommendation this insight relates to', on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights', to='policy_tracking.policyrecommendation'),
        ),
        migrations.AddField(
            model_name='aiinsight',
            name='validated_by',
            field=models.ForeignKey(blank=True, help_text='User who validated this insight', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_insights', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aioperation',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User who initiated the operation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_operations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aiusagemetrics',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_usage_metrics', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentembedding',
            name='content_type',
            field=models.ForeignKey(help_text='Type of object that was embedded', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['user', 'conversation_type'], name='ai_assistan_user_id_b7e329_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['related_policy', 'is_active'], name='ai_assistan_related_a3dd24_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['created_at', 'user'], name='ai_assistan_created_db2bb4_idx'),
        ),
        migrations.AddIndex(
            model_name='aigenerateddocument',
            index=models.Index(fields=['related_policy', 'document_type'], name='ai_assistan_related_ec4597_idx'),
        ),
        migrations.AddIndex(
            model_name='aigenerateddocument',
            index=models.Index(fields=['status', 'document_type'], name='ai_assistan_status_d7ddd0_idx'),
        ),
        migrations.AddIndex(
            model_name='aigenerateddocument',
            index=models.Index(fields=['created_at', 'generated_by'], name='ai_assistan_created_a4e6a1_idx'),
        ),
        migrations.AddIndex(
            model_name='aiinsight',
            index=models.Index(fields=['related_policy', 'insight_type'], name='ai_assistan_related_52a921_idx'),
        ),
        migrations.AddIndex(
            model_name='aiinsight',
            index=models.Index(fields=['is_validated', 'confidence_level'], name='ai_assistan_is_vali_18559f_idx'),
        ),
        migrations.AddIndex(
            model_name='aiinsight',
            index=models.Index(fields=['created_at', 'insight_type'], name='ai_assistan_created_25584c_idx'),
        ),
        migrations.AddIndex(
            model_name='aioperation',
            index=models.Index(fields=['operation_type', 'created_at'], name='ai_assistan_operati_4a8604_idx'),
        ),
        migrations.AddIndex(
            model_name='aioperation',
            index=models.Index(fields=['module', 'created_at'], name='ai_assistan_module_7c51af_idx'),
        ),
        migrations.AddIndex(
            model_name='aioperation',
            index=models.Index(fields=['user', 'created_at'], name='ai_assistan_user_id_eb1a89_idx'),
        ),
        migrations.AddIndex(
            model_name='aioperation',
            index=models.Index(fields=['success', 'created_at'], name='ai_assistan_success_4c4b73_idx'),
        ),
        migrations.AddIndex(
            model_name='aioperation',
            index=models.Index(fields=['cached', 'created_at'], name='ai_assistan_cached_2340dc_idx'),
        ),
        migrations.AddIndex(
            model_name='aiusagemetrics',
            index=models.Index(fields=['date', 'user'], name='ai_assistan_date_a8dea0_idx'),
        ),
        migrations.AddIndex(
            model_name='aiusagemetrics',
            index=models.Index(fields=['created_at'], name='ai_assistan_created_79785d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='aiusagemetrics',
            unique_together={('user', 'date')},
        ),
        migrations.AddIndex(
            model_name='documentembedding',
            index=models.Index(fields=['content_type', 'object_id'], name='ai_assistan_content_967f98_idx'),
        ),
        migrations.AddIndex(
            model_name='documentembedding',
            index=models.Index(fields=['index_name', 'updated_at'], name='ai_assistan_index_n_ad5579_idx'),
        ),
        migrations.AddIndex(
            model_name='documentembedding',
            index=models.Index(fields=['embedding_hash'], name='ai_assistan_embeddi_285e71_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documentembedding',
            unique_together={('content_type', 'object_id', 'index_name')},
        ),
    ]
