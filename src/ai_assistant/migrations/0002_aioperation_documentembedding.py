# Generated by Django 5.2.7 on 2025-10-06 04:07

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("ai_assistant", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AIOperation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "operation_type",
                    models.CharField(
                        choices=[
                            ("chat", "Chat/Conversation"),
                            ("analysis", "Policy Analysis"),
                            ("document_generation", "Document Generation"),
                            ("evidence_review", "Evidence Review"),
                            ("cultural_guidance", "Cultural Guidance"),
                            ("needs_classification", "Needs Classification"),
                            ("other", "Other"),
                        ],
                        help_text="Type of AI operation",
                        max_length=50,
                    ),
                ),
                (
                    "module",
                    models.CharField(
                        choices=[
                            ("general", "General"),
                            ("mana", "Mapping & Needs Assessment"),
                            ("coordination", "Coordination"),
                            ("communities", "Communities"),
                            ("policies", "Policy Tracking"),
                            ("project_central", "Project Central"),
                        ],
                        default="general",
                        help_text="OBCMS module where operation was performed",
                        max_length=50,
                    ),
                ),
                (
                    "prompt_hash",
                    models.CharField(
                        db_index=True,
                        help_text="SHA256 hash of prompt (for cache key tracking)",
                        max_length=64,
                    ),
                ),
                (
                    "model_used",
                    models.CharField(
                        default="gemini-1.5-pro",
                        help_text="AI model used for this operation",
                        max_length=50,
                    ),
                ),
                (
                    "tokens_used",
                    models.IntegerField(
                        default=0, help_text="Total tokens used (input + output)"
                    ),
                ),
                (
                    "response_time",
                    models.FloatField(help_text="Response time in seconds"),
                ),
                (
                    "cost",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Cost of operation in USD",
                        max_digits=10,
                    ),
                ),
                (
                    "success",
                    models.BooleanField(
                        default=True, help_text="Whether operation succeeded"
                    ),
                ),
                (
                    "error",
                    models.TextField(
                        blank=True, help_text="Error message if operation failed"
                    ),
                ),
                (
                    "error_category",
                    models.CharField(
                        blank=True,
                        help_text="Error category (rate_limit, timeout, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "cached",
                    models.BooleanField(
                        default=False,
                        help_text="Whether response was served from cache",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who initiated the operation",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ai_operations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["operation_type", "created_at"],
                        name="ai_assistan_operati_4a8604_idx",
                    ),
                    models.Index(
                        fields=["module", "created_at"],
                        name="ai_assistan_module_7c51af_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="ai_assistan_user_id_eb1a89_idx",
                    ),
                    models.Index(
                        fields=["success", "created_at"],
                        name="ai_assistan_success_4c4b73_idx",
                    ),
                    models.Index(
                        fields=["cached", "created_at"],
                        name="ai_assistan_cached_2340dc_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DocumentEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_id",
                    models.PositiveIntegerField(help_text="ID of the embedded object"),
                ),
                (
                    "embedding_hash",
                    models.CharField(
                        help_text="MD5 hash of content (used to detect changes)",
                        max_length=64,
                    ),
                ),
                (
                    "model_used",
                    models.CharField(
                        default="sentence-transformers/all-MiniLM-L6-v2",
                        help_text="Embedding model used",
                        max_length=100,
                    ),
                ),
                (
                    "dimension",
                    models.PositiveIntegerField(
                        default=384, help_text="Embedding vector dimension"
                    ),
                ),
                (
                    "index_name",
                    models.CharField(
                        help_text="Name of the vector store index (e.g., 'communities', 'assessments')",
                        max_length=50,
                    ),
                ),
                (
                    "index_position",
                    models.PositiveIntegerField(
                        blank=True, help_text="Position in the FAISS index", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        help_text="Type of object that was embedded",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="ai_assistan_content_967f98_idx",
                    ),
                    models.Index(
                        fields=["index_name", "updated_at"],
                        name="ai_assistan_index_n_ad5579_idx",
                    ),
                    models.Index(
                        fields=["embedding_hash"], name="ai_assistan_embeddi_285e71_idx"
                    ),
                ],
                "unique_together": {("content_type", "object_id", "index_name")},
            },
        ),
    ]
