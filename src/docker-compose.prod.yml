# OBCMS/BMMS Production Docker Compose Configuration
# Optimized for 44 BARMM Ministries, Offices, and Agencies

version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: obcms_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-obcms_prod}
      POSTGRES_USER: ${POSTGRES_USER:-obcms_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-obcms_user}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache and Message Broker
  redis:
    image: redis:7-alpine
    container_name: obcms_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Django Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: obcms_web
    environment:
      - DJANGO_SETTINGS_MODULE=obc_management.settings.production
      - DATABASE_URL=postgres://${POSTGRES_USER:-obcms_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-obcms_prod}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-0}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - BASE_URL=${BASE_URL}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - AI_ENABLED=${AI_ENABLED:-1}
      - BMMS_MODE=${BMMS_MODE:-bmms}
    volumes:
      - staticfiles:/app/src/staticfiles
      - mediafiles:/app/src/media
      - ./logs:/app/src/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: >
      sh -c "
        python manage.py migrate --no-input &&
        python manage.py collectstatic --no-input &&
        python manage.py check --deploy &&
        python /app/src/start_production.sh
      "

  # Celery Worker (Background Tasks)
  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: obcms_celery
    environment:
      - DJANGO_SETTINGS_MODULE=obc_management.settings.production
      - DATABASE_URL=postgres://${POSTGRES_USER:-obcms_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-obcms_prod}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - AI_ENABLED=${AI_ENABLED:-1}
    volumes:
      - ./logs:/app/src/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: celery -A obc_management worker -l info --concurrency=4

  # Celery Beat (Scheduled Tasks)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: obcms_celery_beat
    environment:
      - DJANGO_SETTINGS_MODULE=obc_management.settings.production
      - DATABASE_URL=postgres://${POSTGRES_USER:-obcms_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-obcms_prod}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./logs:/app/src/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: celery -A obc_management beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: obcms_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - ./ssl:/etc/nginx/ssl:ro
      - staticfiles:/var/www/static:ro
      - mediafiles:/var/www/media:ro
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  staticfiles:
    driver: local
  mediafiles:
    driver: local

networks:
  default:
    name: obcms_network