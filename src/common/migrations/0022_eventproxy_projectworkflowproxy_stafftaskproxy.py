# Generated by Django 5.2.7 on 2025-10-05 12:09
"""
Create proxy models for WorkItem to maintain backward compatibility.

This migration creates proxy models that allow legacy code to reference
StaffTask, Event, and ProjectWorkflow while using the unified WorkItem table.

Proxy Pattern:
- StaffTaskProxy → WorkItem (work_type='task')
- EventProxy → WorkItem (work_type='activity')
- ProjectWorkflowProxy → WorkItem (work_type='project')

Note: Proxies created after old models deleted (0021, coordination.0013).
This is correct because proxies point to WorkItem, not old models.

Reverse Migration Limitations:
- Deleting these proxies will not restore old model data
- Data exists in WorkItem table, not in old model tables
- Reverse migrations beyond this point will lose data

See: docs/refactor/UNIFIED_WORK_HIERARCHY_EVALUATION.md
See: docs/audits/latest/20251025-2347-proxy-model-sequencing-audit.md
"""

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0021_add_model_validation_constraints"),
    ]

    operations = [
        migrations.CreateModel(
            name="EventProxy",
            fields=[],
            options={
                "verbose_name": "Event",
                "verbose_name_plural": "Events",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("common.workitem",),
        ),
        migrations.CreateModel(
            name="ProjectWorkflowProxy",
            fields=[],
            options={
                "verbose_name": "Project Workflow",
                "verbose_name_plural": "Project Workflows",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("common.workitem",),
        ),
        migrations.CreateModel(
            name="StaffTaskProxy",
            fields=[],
            options={
                "verbose_name": "Staff Task",
                "verbose_name_plural": "Staff Tasks",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("common.workitem",),
        ),
    ]
