# Generated by Django 5.2.7 on 2025-10-05 06:28

import django.core.validators
import django.db.models.deletion
import mptt.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0019_update_system_user_display_name"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="WorkItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "work_type",
                    models.CharField(
                        choices=[
                            ("project", "Project"),
                            ("sub_project", "Sub-Project"),
                            ("activity", "Activity"),
                            ("sub_activity", "Sub-Activity"),
                            ("task", "Task"),
                            ("subtask", "Subtask"),
                        ],
                        db_index=True,
                        help_text="Type of work item",
                        max_length=20,
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Title of work item", max_length=500),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Detailed description"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("at_risk", "At Risk"),
                            ("blocked", "Blocked"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        db_index=True,
                        default="not_started",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                            ("critical", "Critical"),
                        ],
                        db_index=True,
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("due_date", models.DateField(blank=True, null=True)),
                ("start_time", models.TimeField(blank=True, null=True)),
                ("end_time", models.TimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "is_calendar_visible",
                    models.BooleanField(
                        default=True, help_text="Show in calendar view"
                    ),
                ),
                (
                    "calendar_color",
                    models.CharField(
                        default="#3B82F6",
                        help_text="Hex color code for calendar display",
                        max_length=7,
                    ),
                ),
                (
                    "progress",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Progress percentage (0-100)",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "auto_calculate_progress",
                    models.BooleanField(
                        default=True, help_text="Auto-calculate progress from children"
                    ),
                ),
                ("is_recurring", models.BooleanField(default=False)),
                (
                    "project_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Project-specific fields (workflow_stage, budget, etc.)",
                    ),
                ),
                (
                    "activity_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Activity-specific fields (event_type, location, etc.)",
                    ),
                ),
                (
                    "task_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Task-specific fields (domain, deliverable_type, etc.)",
                    ),
                ),
                ("object_id", models.UUIDField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "assignees",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Assigned users",
                        related_name="assigned_work_items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_work_items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        help_text="Parent work item (null for top-level)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="common.WorkItem",
                    ),
                ),
                (
                    "recurrence_pattern",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recurring_work_items",
                        to="common.recurringeventpattern",
                    ),
                ),
                (
                    "related_items",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Related work items (dependencies, references)",
                        related_name="related_to",
                        to="common.WorkItem",
                    ),
                ),
                (
                    "teams",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Assigned teams",
                        related_name="work_items",
                        to="common.staffteam",
                    ),
                ),
            ],
            options={
                "verbose_name": "Work Item",
                "verbose_name_plural": "Work Items",
                "db_table": "common_work_item",
                "indexes": [
                    models.Index(
                        fields=["work_type", "status"],
                        name="common_work_work_ty_755571_idx",
                    ),
                    models.Index(
                        fields=["start_date", "due_date"],
                        name="common_work_start_d_3521a0_idx",
                    ),
                    models.Index(
                        fields=["status", "priority"],
                        name="common_work_status_25ac42_idx",
                    ),
                    models.Index(
                        fields=["tree_id", "lft"], name="common_workitem_tree_id_lfab60"
                    ),
                ],
            },
        ),
    ]
