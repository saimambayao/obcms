# Generated by Django 4.2.24 on 2025-10-01 11:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('policy_tracking', '0003_policyimplementationmilestone'),
        ('monitoring', '0010_monitoringentry_cost_effectiveness_rating_and_more'),
        ('communities', '0026_communityevent'),
        ('data_imports', '0001_initial'),
        ('municipal_profiles', '0002_municipalobcprofile_last_reported_by_and_more'),
        ('coordination', '0009_remove_event_recurrence_end_date_and_more'),
        ('mana', '0021_add_needvote_model'),
        ('services', '0001_initial'),
        ('common', '0013_calendarresource_recurringeventpattern_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('domain', models.CharField(choices=[('general', 'General Staff Task'), ('communities', 'Community Management'), ('mana', 'MANA Assessment'), ('coordination', 'Coordination & Partnerships'), ('monitoring', 'Monitoring & Evaluation'), ('policy', 'Policy Development'), ('services', 'Service Delivery'), ('municipal', 'Municipal Profiles'), ('data', 'Data Management'), ('ai', 'AI Operations')], help_text='Domain this template applies to', max_length=30)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this template is available for use')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TaskTemplateItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('task_category', models.CharField(blank=True, max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=12)),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated effort in hours', max_digits=6, null=True)),
                ('sequence', models.PositiveIntegerField(default=0, help_text='Order of this task in the template')),
                ('days_from_start', models.PositiveIntegerField(default=0, help_text='Due date offset from parent entity start date')),
                ('assessment_phase', models.CharField(blank=True, choices=[('planning', 'Planning'), ('data_collection', 'Data Collection'), ('analysis', 'Analysis'), ('report_writing', 'Report Writing'), ('review', 'Review')], max_length=30)),
                ('policy_phase', models.CharField(blank=True, choices=[('drafting', 'Drafting'), ('evidence_collection', 'Evidence Collection'), ('review', 'Review & Revision'), ('consultation', 'Stakeholder Consultation'), ('submission', 'Submission & Approval'), ('implementation', 'Implementation'), ('monitoring', 'Monitoring & Evaluation')], max_length=30)),
                ('service_phase', models.CharField(blank=True, choices=[('setup', 'Service Setup'), ('application_review', 'Application Review'), ('delivery', 'Service Delivery'), ('followup', 'Follow-up'), ('reporting', 'Reporting')], max_length=30)),
                ('task_role', models.CharField(blank=True, choices=[('lead', 'Lead'), ('contributor', 'Contributor'), ('reviewer', 'Reviewer'), ('approver', 'Approver'), ('monitor', 'Monitor')], max_length=20)),
            ],
            options={
                'ordering': ['template', 'sequence'],
            },
        ),
        migrations.AddField(
            model_name='stafftask',
            name='actual_hours',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Actual effort spent in hours', max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='assessment_phase',
            field=models.CharField(blank=True, choices=[('planning', 'Planning'), ('data_collection', 'Data Collection'), ('analysis', 'Analysis'), ('report_writing', 'Report Writing'), ('review', 'Review')], help_text='Which assessment phase this task supports', max_length=30),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='deliverable_type',
            field=models.CharField(blank=True, help_text='Expected deliverable (survey_data, analysis_report, etc.)', max_length=50),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='depends_on',
            field=models.ManyToManyField(blank=True, help_text='Tasks this task depends on', related_name='dependent_tasks', to='common.stafftask'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='domain',
            field=models.CharField(blank=True, choices=[('general', 'General Staff Task'), ('communities', 'Community Management'), ('mana', 'MANA Assessment'), ('coordination', 'Coordination & Partnerships'), ('monitoring', 'Monitoring & Evaluation'), ('policy', 'Policy Development'), ('services', 'Service Delivery'), ('municipal', 'Municipal Profiles'), ('data', 'Data Management'), ('ai', 'AI Operations')], default='general', help_text='Domain/module this task belongs to', max_length=30),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='estimated_hours',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Estimated effort in hours', max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='geographic_scope',
            field=models.JSONField(blank=True, default=dict, help_text='Geographic coverage: {region, province, municipality, barangay}'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='policy_phase',
            field=models.CharField(blank=True, choices=[('drafting', 'Drafting'), ('evidence_collection', 'Evidence Collection'), ('review', 'Review & Revision'), ('consultation', 'Stakeholder Consultation'), ('submission', 'Submission & Approval'), ('implementation', 'Implementation'), ('monitoring', 'Monitoring & Evaluation')], help_text='Which policy phase this task supports', max_length=30),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_application',
            field=models.ForeignKey(blank=True, help_text='Related service application', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='services.serviceapplication'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_assessment',
            field=models.ForeignKey(blank=True, help_text='Related MANA assessment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='mana.assessment'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_baseline',
            field=models.ForeignKey(blank=True, help_text='Related baseline study', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='mana.baselinestudy'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_communication',
            field=models.ForeignKey(blank=True, help_text='Related communication', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='coordination.communication'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_community',
            field=models.ForeignKey(blank=True, help_text='Related OBC community', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='communities.obccommunity'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_dev_plan',
            field=models.ForeignKey(blank=True, help_text='Related development plan', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='common.staffdevelopmentplan'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_engagement',
            field=models.ForeignKey(blank=True, help_text='Related stakeholder engagement', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='communities.stakeholderengagement'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_funding_flow',
            field=models.ForeignKey(blank=True, help_text='Related funding flow', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='monitoring.monitoringentryfunding'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_import',
            field=models.ForeignKey(blank=True, help_text='Related data import', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='data_imports.dataimport'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_mao_focal_person',
            field=models.ForeignKey(blank=True, help_text='Related MAO focal person', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='coordination.maofocalperson'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_mapping',
            field=models.ForeignKey(blank=True, help_text='Related mapping activity', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='mana.mappingactivity'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_municipal_profile',
            field=models.ForeignKey(blank=True, help_text='Related municipal profile', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='municipal_profiles.municipalobcprofile'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_municipality_coverage',
            field=models.ForeignKey(blank=True, help_text='Related municipality coverage', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='communities.municipalitycoverage'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_need',
            field=models.ForeignKey(blank=True, help_text='Related identified need', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='mana.need'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_organization',
            field=models.ForeignKey(blank=True, help_text='Related organization', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='coordination.organization'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_outcome_indicator',
            field=models.ForeignKey(blank=True, help_text='Related outcome indicator', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='monitoring.outcomeindicator'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_partnership',
            field=models.ForeignKey(blank=True, help_text='Related partnership', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='coordination.partnership'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_partnership_milestone',
            field=models.ForeignKey(blank=True, help_text='Related partnership milestone', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='coordination.partnershipmilestone'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_performance_target',
            field=models.ForeignKey(blank=True, help_text='Related performance target', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='common.performancetarget'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_policy',
            field=models.ForeignKey(blank=True, help_text='Related policy recommendation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='policy_tracking.policyrecommendation'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_policy_evidence',
            field=models.ForeignKey(blank=True, help_text='Related policy evidence', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='policy_tracking.policyevidence'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_policy_milestone',
            field=models.ForeignKey(blank=True, help_text='Related policy implementation milestone', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='policy_tracking.policyimplementationmilestone'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_ppa',
            field=models.ForeignKey(blank=True, help_text='Related PPA/monitoring entry', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='monitoring.monitoringentry'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_service',
            field=models.ForeignKey(blank=True, help_text='Related service offering', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='services.serviceoffering'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_stakeholder',
            field=models.ForeignKey(blank=True, help_text='Related stakeholder', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='communities.stakeholder'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_strategic_goal',
            field=models.ForeignKey(blank=True, help_text='Related strategic goal', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='monitoring.strategicgoal'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_survey',
            field=models.ForeignKey(blank=True, help_text='Related survey', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='mana.survey'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_training',
            field=models.ForeignKey(blank=True, help_text='Related training enrollment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='common.trainingenrollment'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_workflow_stage',
            field=models.ForeignKey(blank=True, help_text='Related workflow stage', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='monitoring.monitoringentryworkflowstage'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='related_workshop',
            field=models.ForeignKey(blank=True, help_text='Related workshop activity', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='mana.workshopactivity'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='service_phase',
            field=models.CharField(blank=True, choices=[('setup', 'Service Setup'), ('application_review', 'Application Review'), ('delivery', 'Service Delivery'), ('followup', 'Follow-up'), ('reporting', 'Reporting')], help_text='Which service phase this task supports', max_length=30),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='task_category',
            field=models.CharField(blank=True, help_text='Specific task type within domain', max_length=50),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='task_role',
            field=models.CharField(blank=True, choices=[('lead', 'Lead'), ('contributor', 'Contributor'), ('reviewer', 'Reviewer'), ('approver', 'Approver'), ('monitor', 'Monitor')], help_text='Role of assignee in this task', max_length=20),
        ),
        migrations.AddIndex(
            model_name='stafftask',
            index=models.Index(fields=['domain', 'status'], name='common_staf_domain_e4c262_idx'),
        ),
        migrations.AddIndex(
            model_name='stafftask',
            index=models.Index(fields=['related_assessment', 'assessment_phase'], name='common_staf_related_f8c582_idx'),
        ),
        migrations.AddIndex(
            model_name='stafftask',
            index=models.Index(fields=['related_ppa', 'task_role'], name='common_staf_related_103b07_idx'),
        ),
        migrations.AddIndex(
            model_name='stafftask',
            index=models.Index(fields=['related_policy', 'policy_phase'], name='common_staf_related_754bf8_idx'),
        ),
        migrations.AddIndex(
            model_name='stafftask',
            index=models.Index(fields=['linked_event'], name='common_staf_linked__aba798_idx'),
        ),
        migrations.AddIndex(
            model_name='stafftask',
            index=models.Index(fields=['due_date', 'status'], name='common_staf_due_dat_f2a181_idx'),
        ),
        migrations.AddField(
            model_name='tasktemplateitem',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='common.tasktemplate'),
        ),
        migrations.AddField(
            model_name='stafftask',
            name='created_from_template',
            field=models.ForeignKey(blank=True, help_text='Template this task was created from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', to='common.tasktemplate'),
        ),
    ]
