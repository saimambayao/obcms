# Generated by Django 4.2.24 on 2025-10-01 04:15

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('policy_tracking', '0002_alter_policyrecommendation_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='PolicyImplementationMilestone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Title of the milestone', max_length=255)),
                ('description', models.TextField(help_text='Detailed description of what needs to be accomplished')),
                ('order', models.PositiveIntegerField(default=1, help_text='Order/sequence of this milestone')),
                ('target_date', models.DateField(help_text='Target completion date')),
                ('actual_completion_date', models.DateField(blank=True, help_text='Actual date when milestone was completed', null=True)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('delayed', 'Delayed'), ('cancelled', 'Cancelled')], default='not_started', help_text='Current status of this milestone', max_length=15)),
                ('responsible_party', models.CharField(help_text='Organization or unit responsible for this milestone', max_length=255)),
                ('progress_percentage', models.PositiveIntegerField(default=0, help_text='Progress percentage (0-100)', validators=[django.core.validators.MaxValueValidator(100)])),
                ('deliverables', models.TextField(blank=True, help_text='Expected deliverables for this milestone')),
                ('actual_outputs', models.TextField(blank=True, help_text='Actual outputs/deliverables achieved')),
                ('challenges', models.TextField(blank=True, help_text='Challenges encountered during implementation')),
                ('notes', models.TextField(blank=True, help_text='Additional notes and updates')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='User assigned to oversee this milestone', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_policy_milestones', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(help_text='User who created this milestone', on_delete=django.db.models.deletion.PROTECT, related_name='created_policy_milestones', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(help_text='Policy recommendation this milestone belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='policy_tracking.policyrecommendation')),
            ],
            options={
                'verbose_name': 'Policy Implementation Milestone',
                'verbose_name_plural': 'Policy Implementation Milestones',
                'ordering': ['policy', 'order', 'target_date'],
                'indexes': [models.Index(fields=['policy', 'status'], name='policy_trac_policy__be2b02_idx'), models.Index(fields=['target_date', 'status'], name='policy_trac_target__586302_idx'), models.Index(fields=['assigned_to', 'status'], name='policy_trac_assigne_a77442_idx')],
            },
        ),
    ]
