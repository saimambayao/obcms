# Generated by Django 5.2.7 on 2025-10-10 19:11

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("monitoring", "0021_update_funding_sources"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="monitoringentry",
            name="beneficiary_demographics",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Structured demographic disaggregation for beneficiaries",
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="beneficiary_description",
            field=models.TextField(
                blank=True,
                help_text="Narrative description of the intended beneficiaries",
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="beneficiary_individuals_total",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Total number of individual beneficiaries",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="beneficiary_organizations_total",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Total number of organizational beneficiaries",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="estimated_total_amount",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Estimated total amount required for the request or proposal",
                max_digits=14,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="is_disaster_related",
            field=models.BooleanField(
                default=False,
                help_text="Flag if the request is tied to a disaster or emergency",
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="related_ppas",
            field=models.ManyToManyField(
                blank=True,
                help_text="Existing PPAs linked to this community request",
                limit_choices_to={"category__in": ["moa_ppa", "oobc_ppa"]},
                related_name="linked_requests",
                to="monitoring.monitoringentry",
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="request_notes",
            field=models.TextField(
                blank=True,
                help_text="Additional notes or validation remarks for the request",
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="request_objectives",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="List of objectives or purposes for the request/proposal",
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="request_source",
            field=models.CharField(
                blank=True,
                choices=[
                    ("community_user", "Verified OBC User"),
                    ("oobc_staff", "OOBC Staff"),
                    ("moa_focal", "MOA Focal Person"),
                    ("lgu_focal", "LGU Focal Person"),
                    ("nga_focal", "NGA Focal Person"),
                ],
                help_text="Channel that lodged this request (community portal, OOBC staff, MOA/LGU/NGA focal)",
                max_length=32,
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="requester_affiliation",
            field=models.CharField(
                blank=True,
                help_text="Affiliated organization or community of the requester",
                max_length=255,
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="requester_alternate_contact_number",
            field=models.CharField(
                blank=True,
                help_text="Alternate contact number distinct from the primary number",
                max_length=32,
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="requester_contact_number",
            field=models.CharField(
                blank=True,
                help_text="Primary contact number for coordination",
                max_length=32,
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="requester_email",
            field=models.EmailField(
                blank=True, help_text="Email address of the requester", max_length=254
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="requester_name",
            field=models.CharField(
                blank=True,
                help_text="Full name of the requester or proponent",
                max_length=255,
            ),
        ),
        migrations.AddField(
            model_name="monitoringentry",
            name="requester_position",
            field=models.CharField(
                blank=True,
                help_text="Designation or role of the requester",
                max_length=255,
            ),
        ),
        migrations.CreateModel(
            name="MonitoringRequestAttachment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("requester_id", "Requester Identification"),
                            ("request_letter", "Letter of Request"),
                            ("proposal", "Written Proposal"),
                            ("photo", "Supporting Photo"),
                            ("other", "Other Document"),
                        ],
                        default="other",
                        help_text="Classification of the supporting document",
                        max_length=32,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Upload supporting document file",
                        upload_to="monitoring/request_documents/%Y/%m/",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Additional notes for this file",
                        max_length=255,
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "entry",
                    models.ForeignKey(
                        help_text="Parent OBC request entry",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="request_attachments",
                        to="monitoring.monitoringentry",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_request_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Request Attachment",
                "verbose_name_plural": "Request Attachments",
                "ordering": ["-uploaded_at"],
            },
        ),
    ]
