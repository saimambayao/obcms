# Generated by Django 4.2.16 on 2025-09-21 04:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mana', '0007_alter_workshopoutput_output_type'),
        ('policy_tracking', '0002_alter_policyrecommendation_category'),
        ('communities', '0011_remove_municipalitycoverage_has_madrasah_and_more'),
        ('coordination', '0004_partnership_partnershipsignatory_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MonitoringEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Name of the project, activity, or request', max_length=255)),
                ('category', models.CharField(choices=[('moa_ppa', 'MOA Project / Program / Activity'), ('oobc_ppa', 'OOBC Project / Program / Activity'), ('obc_request', 'OBC Request or Proposal')], max_length=20)),
                ('summary', models.TextField(blank=True, help_text='Overview of objectives, beneficiaries, and scope')),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='planning', help_text='Implementation status for PPAs', max_length=20)),
                ('request_status', models.CharField(blank=True, choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('clarification', 'For Clarification'), ('endorsed', 'Endorsed'), ('approved', 'Approved'), ('in_progress', 'In Implementation'), ('completed', 'Completed'), ('deferred', 'Deferred'), ('declined', 'Declined')], help_text='Lifecycle state applicable to community requests', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority level for follow-ups and support', max_length=10)),
                ('progress', models.PositiveIntegerField(default=0, help_text='Overall completion percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('oobc_unit', models.CharField(blank=True, help_text='OOBC unit or team responsible for follow-through', max_length=255)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('target_end_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('next_milestone_date', models.DateField(blank=True, null=True)),
                ('budget_allocation', models.DecimalField(blank=True, decimal_places=2, help_text='Budget allocation supporting the activity', max_digits=14, null=True)),
                ('budget_currency', models.CharField(default='PHP', help_text='Currency of the recorded budget', max_length=10)),
                ('outcome_indicators', models.TextField(blank=True, help_text='Key indicators and expected outcomes')),
                ('accomplishments', models.TextField(blank=True, help_text='Documented accomplishments and outputs')),
                ('challenges', models.TextField(blank=True, help_text='Challenges, risks, and mitigation notes')),
                ('support_required', models.TextField(blank=True, help_text='Support requested from OOBC or partners')),
                ('follow_up_actions', models.TextField(blank=True, help_text='Immediate next steps and focal assignments')),
                ('last_status_update', models.DateField(blank=True, help_text='Date of the most recent status update', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('communities', models.ManyToManyField(blank=True, help_text='Targeted or benefiting OBC communities', related_name='monitoring_entries', to='communities.obccommunity')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_monitoring_entries', to=settings.AUTH_USER_MODEL)),
                ('lead_organization', models.ForeignKey(blank=True, help_text='Primary implementing or receiving organization', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monitoring_entries', to='coordination.organization')),
                ('related_assessment', models.ForeignKey(blank=True, help_text='Linked OBC-MANA assessment, if any', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monitoring_entries', to='mana.assessment')),
                ('related_event', models.ForeignKey(blank=True, help_text='Related coordination activity or event', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monitoring_entries', to='coordination.event')),
                ('related_policy', models.ForeignKey(blank=True, help_text='Policy recommendation informing this entry', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monitoring_entries', to='policy_tracking.policyrecommendation')),
                ('submitted_by_community', models.ForeignKey(blank=True, help_text='Origin OBC community for requests or proposals', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_monitoring_entries', to='communities.obccommunity')),
                ('submitted_to_organization', models.ForeignKey(blank=True, help_text='Receiving MOA or office for requests', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_monitoring_requests', to='coordination.organization')),
                ('supporting_organizations', models.ManyToManyField(blank=True, help_text='Supporting partner organizations', related_name='supporting_monitoring_entries', to='coordination.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_monitoring_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Monitoring Entry',
                'verbose_name_plural': 'Monitoring Entries',
                'ordering': ['-updated_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MonitoringUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_type', models.CharField(choices=[('status', 'Status Update'), ('progress', 'Progress Update'), ('milestone', 'Milestone'), ('communication', 'Communication'), ('note', 'General Note')], default='note', max_length=20)),
                ('status', models.CharField(blank=True, choices=[('planning', 'Planning'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], help_text='Updated PPA implementation status', max_length=20)),
                ('request_status', models.CharField(blank=True, choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('clarification', 'For Clarification'), ('endorsed', 'Endorsed'), ('approved', 'Approved'), ('in_progress', 'In Implementation'), ('completed', 'Completed'), ('deferred', 'Deferred'), ('declined', 'Declined')], help_text='Updated request lifecycle state', max_length=20)),
                ('progress', models.PositiveIntegerField(blank=True, help_text='New completion percentage', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('notes', models.TextField(help_text='Narrative update or decisions recorded')),
                ('next_steps', models.TextField(blank=True, help_text='Follow-up actions to undertake after this update')),
                ('follow_up_date', models.DateField(blank=True, help_text='Date for the next follow-up or coordination', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monitoring_updates', to=settings.AUTH_USER_MODEL)),
                ('entry', models.ForeignKey(help_text='Parent monitoring entry', on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='monitoring.monitoringentry')),
            ],
            options={
                'verbose_name': 'Monitoring Update',
                'verbose_name_plural': 'Monitoring Updates',
                'ordering': ['-created_at'],
            },
        ),
    ]
