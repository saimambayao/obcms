services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes

  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: obcms
      POSTGRES_USER: obcms
      POSTGRES_PASSWORD: obcms_dev_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U obcms"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  web:
    build:
      context: .
      target: development
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/src/staticfiles
      - media_volume:/app/src/media
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=obc_management.settings.development
      - DATABASE_URL=postgres://obcms:obcms_dev_password@db:5432/obcms
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - BMMS_MODE=obcms
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: >
      sh -c "cd src &&
             python manage.py migrate --fake-initial &&
             python manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build:
      context: .
      target: development
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=obc_management.settings.development
      - DATABASE_URL=postgres://obcms:obcms_dev_password@db:5432/obcms
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - BMMS_MODE=obcms
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: >
      sh -c "cd src &&
             celery -A obc_management worker -l info --concurrency=4"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "celery", "inspect", "ping", "-A", "obc_management"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery-beat:
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - celerybeat_data:/app/celerybeat-schedule
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=obc_management.settings.development
      - DATABASE_URL=postgres://obcms:obcms_dev_password@db:5432/obcms
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - BMMS_MODE=obcms
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: >
      sh -c "cd src &&
             celery -A obc_management beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    restart: unless-stopped

  flower:
    build:
      context: .
      target: development
    ports:
      - "5555:5555"
    environment:
      - DEBUG=1
      - DATABASE_URL=postgres://obcms:obcms_dev_password@db:5432/obcms
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    depends_on:
      redis:
        condition: service_healthy
    command: >
      sh -c "cd src &&
             celery -A obc_management flower --port=5555"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  celerybeat_data: