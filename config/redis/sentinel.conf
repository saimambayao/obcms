# Redis Sentinel Configuration for BMMS Phase 8 Full Rollout
# Automatic failover and monitoring for Redis cluster
# Monitors master and promotes replica on failure

# Network configuration
bind 0.0.0.0
port 26379
daemonize no
pidfile /var/run/redis/redis-sentinel.pid
logfile ""
dir /tmp

# Sentinel monitoring configuration
# sentinel monitor <master-name> <ip> <port> <quorum>
# quorum = minimum number of sentinels that need to agree for failover
sentinel monitor bmms-master redis-master 6379 2

# Authentication (if Redis requires password)
# sentinel auth-pass bmms-master REPLACE_WITH_MASTER_PASSWORD

# Sentinel will consider master as down after this many milliseconds
sentinel down-after-milliseconds bmms-master 5000

# How many replicas can be reconfigured to sync with new master simultaneously
# Lower value = slower failover, but less impact on replicas
sentinel parallel-syncs bmms-master 1

# Failover timeout (milliseconds)
# If failover doesn't complete in this time, consider it failed
sentinel failover-timeout bmms-master 180000

# Notification scripts (optional - run on failover events)
# sentinel notification-script bmms-master /path/to/notification-script.sh
# sentinel client-reconfig-script bmms-master /path/to/reconfig-script.sh

# Sentinel configuration will be rewritten by sentinel itself
# Original state will be backed up in sentinel.conf.bak

# IMPORTANT: Run at least 3 Sentinel instances (odd number)
# Sentinel instance 1: This file
# Sentinel instance 2: Same config, different host
# Sentinel instance 3: Same config, different host

# Advanced Sentinel configuration

# Deny scripts with less restrictive permissions
sentinel deny-scripts-reconfig yes

# Announce IP and port (for Docker/NAT environments)
# sentinel announce-ip 192.168.1.100
# sentinel announce-port 26379

# Sentinel election and failover settings
# How long after last communication with master before starting failover
sentinel resolve-hostnames no
sentinel announce-hostnames no

# TLS/SSL configuration (if using encrypted connections)
# port 0
# tls-port 26379
# tls-cert-file /path/to/sentinel.crt
# tls-key-file /path/to/sentinel.key
# tls-ca-cert-file /path/to/ca.crt
# tls-replication yes

# Protected mode (enable for security)
protected-mode yes

# Sentinel ACL (Redis 6.2+)
# aclfile /etc/redis/sentinel-users.acl

# Logging
loglevel notice

# Example multi-sentinel configuration:
#
# Sentinel 1 (sentinel.conf on host1):
# sentinel monitor bmms-master redis-master 6379 2
# bind 0.0.0.0
# port 26379
#
# Sentinel 2 (sentinel.conf on host2):
# sentinel monitor bmms-master redis-master 6379 2
# bind 0.0.0.0
# port 26379
#
# Sentinel 3 (sentinel.conf on host3):
# sentinel monitor bmms-master redis-master 6379 2
# bind 0.0.0.0
# port 26379
#
# With quorum=2, at least 2 sentinels must agree master is down
# before initiating failover. This prevents false positives.

# Sentinel commands (for manual intervention):
# - SENTINEL masters: List monitored masters
# - SENTINEL master <master-name>: Show master info
# - SENTINEL replicas <master-name>: Show replicas
# - SENTINEL sentinels <master-name>: Show other sentinels
# - SENTINEL failover <master-name>: Force manual failover
# - SENTINEL reset <pattern>: Reset monitoring state

# Health check query interval (milliseconds)
sentinel info-refresh-period 10000

# Replica priority weight (used in failover election)
# Lower priority = more likely to be promoted
# Priority 0 = never promote this replica
# Default: 100
