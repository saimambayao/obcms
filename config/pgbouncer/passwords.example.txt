# Example Passwords File for PgBouncer Hash Generation
# Format: username:password
#
# SECURITY WARNING:
# - This is an EXAMPLE file showing the format
# - DO NOT use these passwords in production
# - Create your own passwords.txt with strong passwords
# - DELETE passwords.txt immediately after generating hashes
# - NEVER commit passwords.txt to version control
#
# Usage:
#   1. Copy this file: cp passwords.example.txt passwords.txt
#   2. Edit passwords.txt with your actual strong passwords
#   3. Generate hashes: ../scripts/generate-pgbouncer-hashes.sh -f passwords.txt
#   4. Copy hashes to userlist.txt
#   5. DELETE passwords.txt: rm passwords.txt
#
# Strong Password Requirements:
#   - Minimum 16 characters
#   - Include uppercase letters (A-Z)
#   - Include lowercase letters (a-z)
#   - Include numbers (0-9)
#   - Include symbols (!@#$%^&*()_+-=[]{}|;:,.<>?)
#   - Do NOT use common words or patterns
#   - Do NOT reuse passwords from other systems
#
# Password Generation:
#   # Generate a strong random password
#   openssl rand -base64 24
#
#   # Or use pwgen (if installed)
#   pwgen -s 24 1

# PostgreSQL superuser
postgres:CHANGE_ME_STRONG_PASSWORD_HERE

# Django application user
obcms_app:CHANGE_ME_STRONG_PASSWORD_HERE

# Replication user
replicator:CHANGE_ME_STRONG_PASSWORD_HERE

# Monitoring user
monitoring:CHANGE_ME_STRONG_PASSWORD_HERE

# PgBouncer admin user
pgbouncer:CHANGE_ME_STRONG_PASSWORD_HERE
