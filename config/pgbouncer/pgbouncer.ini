;; ============================================================================
;; PgBouncer Configuration for OBCMS
;; Connection pooling for multi-organizational system
;; ============================================================================

[databases]
;; Primary database connection
;; Format: dbname = host=hostname port=5432 dbname=database user=user password=password
obcms = host=db port=5432 dbname=obcms user=obcms_app

;; Read replica for SELECT queries (staging: 1 replica, production: 3 replicas)
;; Uncomment when read replicas are set up
; obcms_replica = host=db-replica1 port=5432 dbname=obcms user=obcms_app

;; For multiple read replicas (production only)
; obcms_replica2 = host=db-replica2 port=5432 dbname=obcms user=obcms_app
; obcms_replica3 = host=db-replica3 port=5432 dbname=obcms user=obcms_app

;; PgBouncer stats database (internal)
pgbouncer = host=localhost port=5432 dbname=pgbouncer user=pgbouncer pool_mode=statement

[pgbouncer]
;; ============================================================================
;; POOLING CONFIGURATION
;; ============================================================================

;; Connection pooling mode
;; - session: Client gets dedicated server connection (safest, least efficient)
;; - transaction: Server connection returns to pool after transaction (RECOMMENDED for web apps)
;; - statement: Server connection returns to pool after each statement (aggressive)
pool_mode = transaction

;; Connection limits
;; Max client connections (total concurrent connections from Django)
max_client_conn = 1000

;; Default pool size per database (actual PostgreSQL connections)
;; Staging: 25 connections, Production: 50+ connections
default_pool_size = 25

;; Minimum pool size (keep connections warm)
min_pool_size = 5

;; Reserve pool (emergency connections for admin operations)
reserve_pool_size = 5

;; Reserve pool timeout (seconds) - how long to wait for reserve pool
reserve_pool_timeout = 5

;; Max prepared statements per connection
max_prepared_statements = 100

;; ============================================================================
;; NETWORK CONFIGURATION
;; ============================================================================

;; Listen address and port
listen_addr = 0.0.0.0
listen_port = 6432

;; Unix socket directory (for local connections)
unix_socket_dir = /var/run/pgbouncer
unix_socket_mode = 0777

;; TCP keepalive settings (detect dead connections)
tcp_keepalive = 1
tcp_keepidle = 60
tcp_keepintvl = 10
tcp_keepcnt = 5

;; TCP socket options
so_reuseport = 1
listen_backlog = 128

;; ============================================================================
;; AUTHENTICATION
;; ============================================================================

;; Authentication type (md5 is most common)
auth_type = md5

;; Path to userlist.txt file
auth_file = /etc/pgbouncer/userlist.txt

;; Admin users (can access pgbouncer console)
admin_users = pgbouncer

;; Stats users (can view stats but not control)
stats_users = monitoring

;; ============================================================================
;; TIMEOUT SETTINGS
;; ============================================================================

;; Server connection settings
server_idle_timeout = 600        ;; Kill idle server connection after 10 minutes
server_connect_timeout = 15      ;; Timeout for connecting to PostgreSQL
server_lifetime = 3600           ;; Kill server connection after 1 hour
server_login_retry = 15          ;; Retry server connection after 15 seconds

;; Client connection settings
client_idle_timeout = 0          ;; 0 = unlimited (let Django manage)
client_login_timeout = 60        ;; Client must login within 60 seconds

;; Query settings
query_timeout = 0                ;; 0 = unlimited (let PostgreSQL manage)
query_wait_timeout = 120         ;; Wait up to 2 minutes for available connection

;; DNS settings
dns_max_ttl = 15                 ;; DNS cache timeout
dns_zone_check_period = 0        ;; Disable DNS zone checking

;; ============================================================================
;; SERVER HEALTH CHECKS
;; ============================================================================

;; Health check query (lightweight query to test server)
server_check_query = SELECT 1

;; Server check delay (seconds between checks)
server_check_delay = 30

;; Server reset query (run when connection is returned to pool)
;; DISCARD ALL is safe for transaction mode
server_reset_query = DISCARD ALL

;; Server fast close (don't wait for server to confirm disconnect)
server_fast_close = 0

;; ============================================================================
;; TLS/SSL CONFIGURATION
;; ============================================================================

;; Server TLS (PgBouncer to PostgreSQL)
;; prefer = use TLS if available, otherwise plain
server_tls_sslmode = prefer

;; Client TLS (Application to PgBouncer)
;; Uncomment for production with SSL certificates
; client_tls_sslmode = require
; client_tls_key_file = /etc/pgbouncer/server-key.pem
; client_tls_cert_file = /etc/pgbouncer/server-cert.pem
; client_tls_ca_file = /etc/pgbouncer/root-cert.pem

;; TLS ciphers (secure cipher suite)
; client_tls_ciphers = HIGH:!aNULL:!MD5

;; ============================================================================
;; LOGGING
;; ============================================================================

;; Log connections and disconnections
log_connections = 1
log_disconnections = 1

;; Log pooler errors
log_pooler_errors = 1

;; Log statistics
log_stats = 1

;; Syslog settings (optional - for centralized logging)
; syslog = 1
; syslog_ident = pgbouncer
; syslog_facility = daemon

;; Verbose logging (0 = normal, 1 = verbose, 2 = debug)
verbose = 0

;; ============================================================================
;; PERFORMANCE TUNING
;; ============================================================================

;; Packet buffer size (bytes)
pkt_buf = 4096

;; SBUF cache size (number of buffers to cache)
sbuf_loopcnt = 5

;; Application name tracking
application_name_add_host = 1

;; Stats collection interval (seconds)
stats_period = 60

;; Suspend timeout (0 = wait forever during PAUSE)
suspend_timeout = 10

;; ============================================================================
;; PROCESS MANAGEMENT
;; ============================================================================

;; Process ID file
pidfile = /var/run/pgbouncer/pgbouncer.pid

;; User to run as (when started as root)
; user = pgbouncer

;; Pause at exit (finish transactions before shutdown)
pause_at_exit = 0

;; ============================================================================
;; ADVANCED SETTINGS
;; ============================================================================

;; Ignore startup parameters from client
;; Allows same PgBouncer for clients with different settings
ignore_startup_parameters = extra_float_digits

;; Disable dangerous SQL commands
disable_pqexec = 0

;; Max packet size (for large queries/results)
max_packet_size = 2147483647

;; Track extra parameters
track_extra_parameters = IntervalStyle

;; Application name prefix
; application_name_add_host = 1

;; ============================================================================
;; PRODUCTION NOTES
;; ============================================================================
;;
;; For Staging (1 replica):
;; - default_pool_size = 25
;; - max_client_conn = 1000
;; - Expected: 50-100 concurrent users
;;
;; For Production (3 replicas):
;; - default_pool_size = 50
;; - max_client_conn = 2000
;; - Expected: 700-1100 concurrent users (44 MOAs)
;;
;; Connection Math:
;; - Primary: 50 connections
;; - Replica1: 50 connections
;; - Replica2: 50 connections
;; - Replica3: 50 connections
;; - Total: 200 PostgreSQL connections
;; - Client connections: 2000 (10:1 ratio)
;;
;; Monitoring:
;; - psql -h localhost -p 6432 -U pgbouncer pgbouncer
;; - SHOW POOLS;
;; - SHOW STATS;
;; - SHOW CLIENTS;
;; - SHOW SERVERS;
;;
;; ============================================================================
